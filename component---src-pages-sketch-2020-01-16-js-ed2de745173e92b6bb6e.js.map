{"version":3,"sources":["webpack:///./src/pages/sketch/2020/01/16.js"],"names":["sketch","p","RENDER","getURLParams","render","setup","pixelDensity","frameRate","createCanvas","WEBGL","noStroke","createLoop","gif","open","draw","theta","animLoop","background","specularMaterial","pointLight","polarToCartesian","width","x","y","height","push","translate","rotateX","dist","scale","easeInOutQuart","abs","cos","box","pop","location","path","pathname","description"],"mappings":"ukBAMA,IAAMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,eAAeC,OAKhCH,EAAEI,MAAQ,WACRJ,EAAEK,aAAaJ,EAAS,EAAI,GAC5BD,EAAEM,UALS,IAMXN,EAAEO,aAAa,IAAK,IAAKP,EAAEQ,OAC3BR,EAAES,WACFT,EAAEU,WATa,GASQ,CACrBC,MAAKV,GAAS,CAAEE,QAAQ,EAAOS,MAAM,MAIzCZ,EAAEa,KAAO,WAAY,IACXC,EAAUd,EAAEe,SAAZD,MACRd,EAAEgB,WAAW,GACbhB,EAAEiB,iBAAiB,KACnBjB,EAAEkB,WAAF,MAAAlB,EAAC,CACC,IACA,IACA,KAHD,SAIImB,YAAiB,EAAG,EAAGL,EAAOd,EAAEoB,MAAQ,GAAG,IAJ/C,CAKW,EAAVpB,EAAEoB,SAGJ,IAAK,IAAIC,GAAKrB,EAAEoB,MAAQ,EAAGC,GAAKrB,EAAEoB,MAAQ,EAAGC,GAxBlC,GAyBT,IAAK,IAAIC,GAAKtB,EAAEuB,OAAS,EAAGD,GAAKtB,EAAEuB,OAAS,EAAGD,GAzBtC,GA0BPtB,EAAEwB,OACFxB,EAAEyB,UAAUJ,EAAGC,EAAG,GAClBtB,EAAE0B,QAAQZ,EAAQd,EAAE2B,KAAKN,EAAGC,EAAG,EAAG,IAClCtB,EAAE4B,MACAC,YACE7B,EAAE8B,IAAI9B,EAAE+B,IAAIjB,EAAQd,EAAE2B,KAAKN,EAAGC,EAAGtB,EAAEoB,MAAQ,EAAGpB,EAAEuB,OAAS,OAG7DvB,EAAEgC,IAlCK,IAmCPhC,EAAEiC,QAMK,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcnC,OAAQA,EAAQoC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2020-01-16-js-ed2de745173e92b6bb6e.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport \"p5.createloop\";\r\nimport { easeInOutQuart } from \"~lib/easing\";\r\nimport polarToCartesian from \"~lib/polarToCartesian\";\r\n\r\nconst sketch = function(p) {\r\n  const RENDER = p.getURLParams().render;\r\n  const DURATION = 20;\r\n  const RATE = 30;\r\n  const GRID = 15;\r\n\r\n  p.setup = function() {\r\n    p.pixelDensity(RENDER ? 2 : 1);\r\n    p.frameRate(RATE);\r\n    p.createCanvas(660, 840, p.WEBGL);\r\n    p.noStroke();\r\n    p.createLoop(DURATION, {\r\n      gif: RENDER ? { render: false, open: true } : false,\r\n    });\r\n  };\r\n\r\n  p.draw = function() {\r\n    const { theta } = p.animLoop;\r\n    p.background(0);\r\n    p.specularMaterial(255);\r\n    p.pointLight(\r\n      255,\r\n      255,\r\n      255,\r\n      ...polarToCartesian(0, 0, theta, p.width / 2, true),\r\n      p.width * 2\r\n    );\r\n\r\n    for (let x = -p.width / 2; x <= p.width / 2; x += GRID) {\r\n      for (let y = -p.height / 2; y <= p.height / 2; y += GRID) {\r\n        p.push();\r\n        p.translate(x, y, 0);\r\n        p.rotateX(theta + p.dist(x, y, 0, 0));\r\n        p.scale(\r\n          easeInOutQuart(\r\n            p.abs(p.cos(theta + p.dist(x, y, p.width / 2, p.height / 2)))\r\n          )\r\n        );\r\n        p.box(GRID);\r\n        p.pop();\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\r\n);\r\n"],"sourceRoot":""}