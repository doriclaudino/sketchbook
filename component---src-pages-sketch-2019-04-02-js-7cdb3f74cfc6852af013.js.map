{"version":3,"sources":["webpack:///./src/lib/polarToCartesian.js","webpack:///./src/pages/sketch/2019/04/02.js"],"names":["polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","y","polarToCartesian","sketch","p","SPEED","TWO_PI","SCALAR","random","HUE","angleA","angleB","setup","createCanvas","background","noFill","strokeWeight","colorMode","HSB","blendMode","HARD_LIGHT","draw","point","map","width","height","bezier","stroke","noLoop","location","path","pathname","description"],"mappings":"6FAAA,0GAAMA,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKC,IAAIH,GAASC,GAE9BG,EAAoB,SAACL,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKG,IAAIL,GAASC,GAa9BK,EAA0B,SAC9BC,EACAC,EACAR,EACAS,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUL,KAAKC,IAAIH,GAASS,EAChCI,EAAIL,EAAUN,KAAKG,IAAIL,GAASU,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlBC,IAzBU,SACvBP,EACAC,EACAR,EACAC,EACAU,QACG,IADHA,OAAU,GAEV,IAAMC,EAAId,EAAkBS,EAASP,EAAOC,GACtCY,EAAIT,EAAkBI,EAASR,EAAOC,GAC5C,OAAOU,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,O,sfCXjC,IAAME,EAAS,SAASC,GACtB,IACMC,EAAQ,IAAOD,EAAEE,OACjBC,EAASH,EAAEI,OAAO,EAAG,IACrBC,EAAML,EAAEI,OAAO,KAEjBE,EAAS,EACTC,EAAS,EAEbP,EAAEQ,MAAQ,WACRR,EAAES,aAAa,IAAK,KACpBT,EAAEU,WAAW,IACbV,EAAEW,SACFX,EAAEY,aAAa,GACfZ,EAAEa,UAAUb,EAAEc,IAAK,KACnBd,EAAEe,UAAUf,EAAEgB,aAGhBhB,EAAEiB,KAAO,WACP,IAAMC,EAAQ,CACZlB,EAAEmB,IAAInB,EAAEX,IAAIiB,IAAU,EAAG,EAnBd,GAmByBN,EAAEoB,MAnB3B,IAmB2C,GACtDpB,EAAEmB,IAAInB,EAAEX,IAAIkB,IAAU,EAAG,EApBd,GAoByBP,EAAEqB,OApB3B,IAoB4C,IAGnDC,EAASxB,YACbE,EAAEoB,MAAQ,EACVpB,EAAEqB,OAAS,EACXf,EACAN,EAAEqB,OAAS,EA3BA,IA4BX,GAGFrB,EAAEuB,OACAlB,EACAL,EAAEmB,IAAInB,EAAEX,IAAIiB,IAAU,EAAG,EAAG,EAAG,KAAK,GACpCN,EAAEmB,IAAInB,EAAEX,IAAIkB,IAAU,EAAG,EAAG,IAAK,GAAG,GACpC,IAGFP,EAAEsB,OAAF,MAAAtB,EACKkB,EADH,OAAD,EAEII,GAFJ,CAGCtB,EAAEoB,MAAQE,EAAO,GACjBtB,EAAEqB,OAASC,EAAO,GAClBtB,EAAEoB,MAAQF,EAAM,GAChBlB,EAAEqB,OAASH,EAAM,MAGnBX,GAAUN,GADVK,GAAUL,EAAQE,GAGLH,EAAEE,QAAQF,EAAEwB,WAId,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE1B,OAAQA,EACR2B,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2019-04-02-js-7cdb3f74cfc6852af013.js","sourcesContent":["const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport polarToCartesian from \"~lib/polarToCartesian\";\r\n\r\nconst sketch = function(p) {\r\n  const MARGIN = 40;\r\n  const SPEED = 0.05 / p.TWO_PI;\r\n  const SCALAR = p.random(2, 20);\r\n  const HUE = p.random(100);\r\n\r\n  let angleA = 0;\r\n  let angleB = 0;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(64);\r\n    p.noFill();\r\n    p.strokeWeight(2);\r\n    p.colorMode(p.HSB, 100);\r\n    p.blendMode(p.HARD_LIGHT);\r\n  };\r\n\r\n  p.draw = function() {\r\n    const point = [\r\n      p.map(p.sin(angleA), -1, 1, MARGIN, p.width - MARGIN, true),\r\n      p.map(p.sin(angleB), -1, 1, MARGIN, p.height - MARGIN, true),\r\n    ];\r\n\r\n    const bezier = polarToCartesian(\r\n      p.width / 2,\r\n      p.height / 2,\r\n      angleA,\r\n      p.height / 3 - MARGIN,\r\n      true\r\n    );\r\n\r\n    p.stroke(\r\n      HUE,\r\n      p.map(p.sin(angleA), -1, 1, 0, 100, true),\r\n      p.map(p.sin(angleB), -1, 1, 100, 0, true),\r\n      10\r\n    );\r\n\r\n    p.bezier(\r\n      ...point,\r\n      ...bezier,\r\n      p.width - bezier[0],\r\n      p.height - bezier[1],\r\n      p.width - point[0],\r\n      p.height - point[1]\r\n    );\r\n    angleA += SPEED / SCALAR;\r\n    angleB += SPEED;\r\n\r\n    if (angleA > p.TWO_PI) p.noLoop();\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout\r\n    sketch={sketch}\r\n    path={location.pathname}\r\n    description=\"Refresh page for a different variation\"\r\n  />\r\n);\r\n"],"sourceRoot":""}