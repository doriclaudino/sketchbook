{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/18.js"],"names":["sketch","p","centerX","centerY","size","speed","jump","scalar","angle","drawn","drawCount","setup","createCanvas","background","noFill","strokeWeight","random","width","height","draw","x","cos","y","sin","noiseVal","noise","stroke","bezier","noLoop","location","path","pathname","description"],"mappings":"4FAAA,6CAGMA,EAAS,SAASC,GACtB,IAGIC,EACAC,EACAC,EACAC,EANAC,EAAO,EACPC,EAAS,EACTC,EAAQ,EAKRC,GAAQ,EACRC,EAAY,EAEhBT,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,WAAW,GACbZ,EAAEa,SACFb,EAAEc,aAAa,IACfX,EAAOH,EAAEe,OAAO,IAAK,KACrBX,EAAQJ,EAAEe,OAAO,EAAG,IACpBd,EAAUD,EAAEgB,MAAQ,GACpBd,EAAUF,EAAEe,OAAO,EAAGf,EAAEiB,SAG1BjB,EAAEkB,KAAO,WACP,IAAMC,EAAIlB,EAAUD,EAAEoB,IAAIb,GAASD,EAC7Be,EAAInB,EAAUF,EAAEsB,IAAIf,GAASD,EAC7BiB,EAAWvB,EAAEwB,MAAML,EAAGE,GACxBF,EAAI,GAAKE,EAAI,GAAKF,EAAInB,EAAEgB,OAASK,EAAIrB,EAAEiB,SACzCT,GAAQ,EACRC,IACAT,EAAEyB,OAAF,uBAAgCF,EAAhC,KACAvB,EAAE0B,OACAzB,EACAC,EACAD,EAAUK,EAASiB,EACnBrB,EAAUI,EAASiB,EACnBJ,EAAIb,EAASiB,EACbF,EAAIf,EAASiB,EACbJ,EACAE,KAGJd,GAASH,GACG,IAAMC,IACZG,GAAuB,IAAdC,GACXT,EAAE2B,SAEJlB,EAAY,EACZH,GAAUF,EACVA,GAASA,EAAQD,EACjBE,OAKS,0BAAGuB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc7B,OAAQA,EAAQ8B,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-18-js-eb718a69fd9707868fa2.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  let jump = 0;\r\n  let scalar = 0;\r\n  let angle = 0;\r\n  let centerX;\r\n  let centerY;\r\n  let size;\r\n  let speed;\r\n  let drawn = false;\r\n  let drawCount = 0;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(0);\r\n    p.noFill();\r\n    p.strokeWeight(0.7);\r\n    size = p.random(300, 500);\r\n    speed = p.random(5, 10);\r\n    centerX = p.width + 50;\r\n    centerY = p.random(0, p.height);\r\n  };\r\n\r\n  p.draw = function() {\r\n    const x = centerX + p.cos(angle) * scalar;\r\n    const y = centerY + p.sin(angle) * scalar;\r\n    const noiseVal = p.noise(x, y);\r\n    if (x > 0 && y > 0 && x < p.width && y < p.height) {\r\n      drawn = true;\r\n      drawCount++;\r\n      p.stroke(`rgba(255, 255, 255, ${noiseVal})`);\r\n      p.bezier(\r\n        centerX,\r\n        centerY,\r\n        centerX + scalar * noiseVal,\r\n        centerY + scalar * noiseVal,\r\n        x + scalar * noiseVal,\r\n        y + scalar * noiseVal,\r\n        x,\r\n        y\r\n      );\r\n    }\r\n    angle += speed;\r\n    if (angle / 360 > jump) {\r\n      if (drawn && drawCount === 0) {\r\n        p.noLoop();\r\n      }\r\n      drawCount = 0;\r\n      scalar += speed;\r\n      speed += speed / size;\r\n      jump++;\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Be patient. Reload page for a different variation.\" />\r\n);\r\n"],"sourceRoot":""}