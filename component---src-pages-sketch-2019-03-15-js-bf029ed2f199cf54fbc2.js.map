{"version":3,"sources":["webpack:///./src/lib/polarToCartesian.js","webpack:///./src/pages/sketch/2019/03/15.js"],"names":["polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","y","polarToCartesian","sketch","p","size","axis","strokeColor","setup","createCanvas","background","width","height","setTimeout","noLoop","draw","noFill","strokeWeight","map","noise","Q","stroke","beginShape","i","TWO_PI","thisAngle","vertex","endShape","CLOSE","frameCount","location","path","pathname"],"mappings":"4FAAA,0GAAMA,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKC,IAAIH,GAASC,GAE9BG,EAAoB,SAACL,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKG,IAAIL,GAASC,GAa9BK,EAA0B,SAC9BC,EACAC,EACAR,EACAS,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUL,KAAKC,IAAIH,GAASS,EAChCI,EAAIL,EAAUN,KAAKG,IAAIL,GAASU,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlBC,IAzBU,SACvBP,EACAC,EACAR,EACAC,EACAU,QACG,IADHA,OAAU,GAEV,IAAMC,EAAId,EAAkBS,EAASP,EAAOC,GACtCY,EAAIT,EAAkBI,EAASR,EAAOC,GAC5C,OAAOU,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,O,kCCfjC,yDAIME,EAAS,SAASC,GACtB,IAEIf,EAAW,EACXD,EAAQ,EACRiB,EAAO,IACPC,EAAO,GACPC,EAAc,IAElBH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,IAAK,KACpBL,EAAEM,WAAW,GACbJ,EAAO,CACLN,EAAGI,EAAEO,MAAQ,EACbV,EAAGG,EAAEQ,OAAS,GAEhBC,YAAW,WACTT,EAAEU,WACD,MAGLV,EAAEW,KAAO,WACPX,EAAEY,SACFZ,EAAEa,aACAb,EAAEc,IAAId,EAAEe,MAAM/B,EAAQ,EAAGC,EAAW,GAAKgB,EAAM,EAAGD,EAAEO,MAvB9C,EAuBwDS,IAEhEhB,EAAEiB,OAAOd,GACTH,EAAEkB,aACF,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAEoB,OAAQD,GAAKnB,EAAEoB,OA3B7B,EA2ByC,CAC/C,IAAMC,EAAYrC,EAAQmC,EADqB,EAE9BrB,YACfI,EAAKN,EACLM,EAAKL,EACLwB,EACArB,EAAEe,MAAM/B,EAAQ,EAAGC,EAAW,GAAKgB,GAJ7BL,EAFuC,EAEvCA,EAAGC,EAFoC,EAEpCA,EAMXG,EAAEsB,OAAO1B,EAAGC,GAEdG,EAAEuB,SAASvB,EAAEwB,OACbxC,GAAS,IACTC,GAAY,GACZgB,GAAQ,GACRC,EAAOJ,YACLE,EAAEO,MAAQ,EACVP,EAAEQ,OAAS,EACXxB,EA5CM,EA6CE,EAARC,GAEEe,EAAEyB,WAAa,KAAQ,IACzBtB,EAA8B,MAAhBA,EAAsB,EAAI,OAK/B,0BAAGuB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc3B,OAAQA,EAAQ4B,KAAMD,EAASE","file":"component---src-pages-sketch-2019-03-15-js-bf029ed2f199cf54fbc2.js","sourcesContent":["const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport polarToCartesian from \"~lib/polarToCartesian\";\r\n\r\nconst sketch = function(p) {\r\n  const Q = 4;\r\n\r\n  let distance = 0;\r\n  let angle = 0;\r\n  let size = 100;\r\n  let axis = {};\r\n  let strokeColor = 255;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(0);\r\n    axis = {\r\n      x: p.width / 2,\r\n      y: p.height / 2,\r\n    };\r\n    setTimeout(() => {\r\n      p.noLoop();\r\n    }, 60000);\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.noFill();\r\n    p.strokeWeight(\r\n      p.map(p.noise(angle / 5, distance / 5) * size, 0, p.width, Q, Q * 2)\r\n    );\r\n    p.stroke(strokeColor);\r\n    p.beginShape();\r\n    for (let i = 0; i < p.TWO_PI; i += p.TWO_PI / Q) {\r\n      const thisAngle = angle + i;\r\n      const { x, y } = polarToCartesian(\r\n        axis.x,\r\n        axis.y,\r\n        thisAngle,\r\n        p.noise(angle / 5, distance / 5) * size\r\n      );\r\n      p.vertex(x, y);\r\n    }\r\n    p.endShape(p.CLOSE);\r\n    angle += 0.01;\r\n    distance += 0.1;\r\n    size += 0.5;\r\n    axis = polarToCartesian(\r\n      p.width / 2,\r\n      p.height / 2,\r\n      angle / Q,\r\n      distance * (Q / 2)\r\n    );\r\n    if (p.frameCount % 100 === 0) {\r\n      strokeColor = strokeColor === 255 ? 0 : 255;\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} />\r\n);\r\n"],"sourceRoot":""}