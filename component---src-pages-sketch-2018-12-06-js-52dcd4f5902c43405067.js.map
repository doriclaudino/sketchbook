{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/06.js"],"names":["sketch","p","scalar","size","angle","setup","createCanvas","background","noStroke","fill","random","draw","x","mouseX","cos","y","mouseY","sin","noiseVal","noise","width","height","mouseIsPressed","ellipse","touchMoved","location","path","pathname","description"],"mappings":"mJAGMA,EAAS,SAASC,GACtB,IACIC,EAGAC,EADAC,EAAQ,EAIZH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,IAAK,KACpBL,EAAEM,WAAW,SACbN,EAAEO,WACFP,EAAEQ,KAAK,qBACPP,EAASD,EAAES,OAAO,GAAI,IACtBP,EAAOF,EAAES,OAAO,GAAI,KAGtBT,EAAEU,KAAO,WACP,IAAMC,EAAIX,EAAEY,OAASZ,EAAEa,IAAIV,GAASF,EAC9Ba,EAAId,EAAEe,OAASf,EAAEgB,IAAIb,GAASF,EAC9BgB,EAAWjB,EAAEkB,MAAMP,EAAGG,GACxBH,EAAI,GAAKG,EAAI,GAAKH,EAAIX,EAAEmB,OAASL,EAAId,EAAEoB,QAAUpB,EAAEqB,gBACrDrB,EAAEsB,QAAQX,EAAGG,EAAGZ,EAAOe,GAEzBd,GAvBY,GA0BdH,EAAEuB,WAAa,WACb,GACEvB,EAAEY,QAAU,GACZZ,EAAEe,QAAU,GACZf,EAAEY,QAAUZ,EAAEmB,OACdnB,EAAEe,QAAUf,EAAEoB,OAEd,OAAO,IAKE,0BAAGI,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAczB,OAAQA,EAAQ0B,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-06-js-52dcd4f5902c43405067.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const speed = 6;\r\n  let scalar;\r\n  let jump = 0;\r\n  let angle = 0;\r\n  let size;\r\n  let letsDraw = false;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(\"white\");\r\n    p.noStroke();\r\n    p.fill(\"rgba(0, 0, 0, .9)\");\r\n    scalar = p.random(10, 20);\r\n    size = p.random(10, 20);\r\n  };\r\n\r\n  p.draw = function() {\r\n    const x = p.mouseX + p.cos(angle) * scalar;\r\n    const y = p.mouseY + p.sin(angle) * scalar;\r\n    const noiseVal = p.noise(x, y);\r\n    if (x > 0 && y > 0 && x < p.width && y < p.height && p.mouseIsPressed) {\r\n      p.ellipse(x, y, size * noiseVal);\r\n    }\r\n    angle += speed;\r\n  };\r\n\r\n  p.touchMoved = function() {\r\n    if (\r\n      p.mouseX >= 0 &&\r\n      p.mouseY >= 0 &&\r\n      p.mouseX <= p.width &&\r\n      p.mouseY <= p.height\r\n    ) {\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Click to draw.\" />\r\n);\r\n"],"sourceRoot":""}