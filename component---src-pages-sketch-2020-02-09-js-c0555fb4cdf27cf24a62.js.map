{"version":3,"sources":["webpack:///./src/pages/sketch/2020/02/09.js"],"names":["sketch","p","heliceHeight","htmlSlider","htmlP","RENDER","getURLParams","render","angle","speed","setup","createCanvas","height","frameRate","background","pixelDensity","createP","createSlider","parent","draw","strokeWeight","value","elt","innerText","translate","width","rect","maxWidth","circle","push","angleMode","DEGREES","rotate","x","cos","heliceWidth","y","sin","turbineWidth","pop","location","path","pathname","description"],"mappings":"2FAAA,6CAIMA,EAAS,SAASC,GACtB,IAKAC,EAIAC,EAAYC,EATNC,EAASJ,EAAEK,eAAeC,OAOhCC,EAAQ,EACRC,EAAQ,KAGRR,EAAES,MAAQ,WACRT,EAAEU,aAAa,IAAK,KACpBT,EAAeD,EAAEW,OAAO,EAExBX,EAAEY,UAbS,IAcXZ,EAAEa,WAAW,KACbb,EAAEc,aAAaV,EAAS,EAAI,GAC5BJ,EAAEY,UAhBS,IAiBXZ,EAAEU,aAAa,IAAK,KAEpBP,EAAQH,EAAEe,QAAQP,EAAQ,UAC1BN,EAAaF,EAAEgB,aAAa,EAAG,GAAIR,EAAO,KAC1CL,EAAMc,OAAO,mBACbf,EAAWe,OAAO,oBAQpBjB,EAAEkB,KAAO,WACPlB,EAAEmB,aAAa,IACfX,EAAQN,EAAWkB,QACnBjB,EAAMkB,IAAIC,UAAYd,EAAQ,SAE9BR,EAAEa,WAAW,KACbb,EAAEuB,UAAUvB,EAAEwB,MAAQ,EAAGxB,EAAEW,OAAS,KAGpCX,EAAEyB,MAAKC,EAAe,EAtCT,EAsCsB1B,EAAEW,OAAS,GAG9CX,EAAE2B,OAAO,EAAG,EAxCC,IAyCb3B,EAAE4B,OACF5B,EAAE6B,UAAU7B,EAAE8B,SACd9B,EAAE+B,OAAOxB,GACT,IACIyB,EA7CS,GA6CLhC,EAAEiC,KAAK,IAAqBC,IAChCC,EA9CS,GA8CJnC,EAAEoC,KAAK,IAAsB,EAFhBC,EAKtBrC,EAAEyB,KAAKO,EAAGG,EA/CE,GA+CelC,GAG3BD,EAAE+B,OAAO,KACT/B,EAAEyB,KAAKO,EAAGG,EAnDE,GAmDelC,GAG3BD,EAAE+B,OAAO,KACT/B,EAAEyB,KAAKO,EAAGG,EAvDE,GAuDelC,GAC3BD,EAAEsC,MAEF/B,GAASC,IAIE,0BAAG+B,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcxC,OAAQA,EAAQyC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2020-02-09-js-c0555fb4cdf27cf24a62.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n// import \"p5.createloop\";\r\n\r\nconst sketch = function(p) {\r\n  const RENDER = p.getURLParams().render;\r\n  // const DURATION = 20;\r\n  const RATE = 60;\r\n  let maxWidth = 6,\r\n  turbineWidth = 15,\r\n  heliceHeight,\r\n  heliceWidth = 3,\r\n  angle = 0,\r\n  speed = 1.25,\r\n  htmlSlider, htmlP\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(600, 600);\r\n    heliceHeight = p.height/6;\r\n     \r\n    p.frameRate(RATE)\r\n    p.background(100);\r\n    p.pixelDensity(RENDER ? 2 : 1);\r\n    p.frameRate(RATE);\r\n    p.createCanvas(600, 600);\r\n\r\n    htmlP = p.createP(speed + ' speed');\r\n    htmlSlider = p.createSlider(0, 70, speed, 0.01); \r\n    htmlP.parent(\"sketch-controls\");\r\n    htmlSlider.parent(\"sketch-controls\");\r\n\r\n    // p.createLoop(DURATION, {\r\n    //  gif: RENDER ? { render: false, open: true } : false,\r\n    //  noiseRadius: 0.1,\r\n    // });\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.strokeWeight(0.5);\r\n    speed = htmlSlider.value();\r\n    htmlP.elt.innerText = speed + \" speed\";\r\n    //59.6\r\n    p.background(100);\r\n    p.translate(p.width / 2, p.height / 1.5);\r\n\r\n    //base\r\n    p.rect(maxWidth / -2, 0, maxWidth, p.height / 2);\r\n\r\n    //center turbine\r\n    p.circle(0, 0, turbineWidth);\r\n    p.push();\r\n    p.angleMode(p.DEGREES);\r\n    p.rotate(angle);\r\n    let spaceFromCenter = turbineWidth / 5;\r\n    let x = p.cos(-90) * turbineWidth - heliceWidth / 2;\r\n    let y = (p.sin(-90) * turbineWidth) / 2 + spaceFromCenter;\r\n\r\n    //one\r\n    p.rect(x, y, heliceWidth, -heliceHeight);\r\n\r\n    //two\r\n    p.rotate(360 / 3);\r\n    p.rect(x, y, heliceWidth, -heliceHeight);\r\n\r\n    //three\r\n    p.rotate(360 / 3);\r\n    p.rect(x, y, heliceWidth, -heliceHeight);\r\n    p.pop();\r\n\r\n    angle += speed;\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"wind generator\" />\r\n);\r\n"],"sourceRoot":""}