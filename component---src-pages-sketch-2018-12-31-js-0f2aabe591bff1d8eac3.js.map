{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/31.js"],"names":["sketch","p","speed","alpha","setup","createCanvas","random","background","noFill","stroke","strokeWeight","draw","x","frameCount","width","y","height","i","pointX","lerp","pointY","dist","map","noise","line","point","randomGaussian","noLoop","location","path","pathname","description"],"mappings":"4FAAA,6CAGMA,EAAS,SAASC,GACtB,IAAIC,EACAC,EAEJF,EAAEG,MAAQ,WACRH,EAAEI,aAAa,IAAK,KACpBH,EAAQD,EAAEK,OAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpCH,EAAQF,EAAEK,OAAO,GAAK,IACtBL,EAAEM,WAAW,KACbN,EAAEO,SACFP,EAAEQ,OAAF,iBAA0BN,EAA1B,KACAF,EAAES,aAAa,IAGjBT,EAAEU,KAAO,WAGP,IAFA,IAAMC,EAAKX,EAAEY,YAAcZ,EAAEa,MAAQZ,GAAUA,EACzCa,EAAKd,EAAEY,YAAcZ,EAAEe,OAASd,GAAUA,EACvCe,EAAI,EAAGA,EAAI,EAAGA,GAAa,GAARd,EAAa,CACvC,IAAMe,EAASjB,EAAEkB,KAAKlB,EAAEa,MAAQ,EAAGF,EAAGK,GAChCG,EAASnB,EAAEkB,KAAKlB,EAAEe,OAAS,EAAGD,EAAGE,GACjCI,EACJnB,EAAQD,EAAEqB,IAAIrB,EAAEsB,MAAML,EAAQE,GAAS,EAAG,EAAG,EAAIjB,EAAO,EAAIA,GAC9DF,EAAEuB,KAAKN,EAASG,EAAMD,EAASC,EAAMH,EAASG,EAAMD,EAASC,GAE/D,GAAU,IAANT,GAAiB,IAANG,GAAWd,EAAEY,WAAa,EAAG,CAC1C,IAAK,IAAII,EAAI,EAAGA,EAAY,IAARf,EAAce,IAChChB,EAAEQ,OACAQ,EAAIf,EAAJ,iBACqBC,EADrB,2BAE2BA,EAF3B,KAIFF,EAAEwB,MACAxB,EAAEyB,eAAezB,EAAEa,MAAQ,EAAGb,EAAEa,MAAQ,GACxCb,EAAEyB,eAAezB,EAAEe,OAAS,EAAGf,EAAEe,OAAS,IAG9Cf,EAAE0B,YAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc5B,OAAQA,EAAQ6B,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-31-js-0f2aabe591bff1d8eac3.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  let speed;\r\n  let alpha;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    speed = p.random([2, 3, 4, 5, 6, 8, 10]);\r\n    alpha = p.random(0.3, 0.8);\r\n    p.background(255);\r\n    p.noFill();\r\n    p.stroke(`rgba(0, 0, 0, ${alpha})`);\r\n    p.strokeWeight(2);\r\n  };\r\n\r\n  p.draw = function() {\r\n    const x = (p.frameCount % (p.width / speed)) * speed;\r\n    const y = (p.frameCount % (p.height / speed)) * speed;\r\n    for (let i = 0; i < 1; i += alpha * 0.1) {\r\n      const pointX = p.lerp(p.width / 2, x, i);\r\n      const pointY = p.lerp(p.height / 2, y, i);\r\n      const dist =\r\n        speed * p.map(p.noise(pointX, pointY), 0, 1, 1 - alpha, 1 + alpha);\r\n      p.line(pointX + dist, pointY - dist, pointX - dist, pointY + dist);\r\n    }\r\n    if (x === 0 && y === 0 && p.frameCount > 0) {\r\n      for (let i = 0; i < speed * 1000; i++) {\r\n        p.stroke(\r\n          i % speed\r\n            ? `rgba(0, 0, 0, ${alpha})`\r\n            : `rgba(255, 255, 255, ${alpha})`\r\n        );\r\n        p.point(\r\n          p.randomGaussian(p.width / 2, p.width / 4),\r\n          p.randomGaussian(p.height / 2, p.height / 4)\r\n        );\r\n      }\r\n      p.noLoop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Reload page for a different variation.\" />\r\n);\r\n"],"sourceRoot":""}