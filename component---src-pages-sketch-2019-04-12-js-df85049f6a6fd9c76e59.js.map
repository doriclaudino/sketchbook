{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/12.js"],"names":["sketch","p","random","GRID","LINES","Doodad","x","y","this","drawFunc","squareH","squareV","arc","triangle","push","strokeCap","SQUARE","translate","i","line","pop","PROJECT","rotate","HALF_PI","PI","setup","createCanvas","background","noLoop","noFill","stroke","draw","width","height","rect","location","path","pathname","description"],"mappings":"6FAAA,6CAGMA,EAAS,SAASC,GAAI,IAAD,EACDA,EAAEC,OAAO,CAC/B,CACEC,KAAM,GACNC,MAAO,GAET,CACED,KAAM,GACNC,MAAO,GAET,CACED,KAAM,GACNC,MAAO,KAXHD,EADiB,EACjBA,KAAMC,EADW,EACXA,MAgBRC,EAjBmB,WAkBvB,WAAYC,EAAGC,GACbC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,SAAWR,EAAEC,OAAO,CACvBM,KAAKE,QACLF,KAAKG,QACLH,KAAKI,IACLJ,KAAKK,WAEPL,KAAKC,WA3BgB,2BA6BvBC,QAAA,WACET,EAAEa,OACFb,EAAEc,UAAUd,EAAEe,QACdf,EAAEgB,UAAUT,KAAKF,EAAGE,KAAKD,GACzB,IAAK,IAAIW,EAAI,EAAGA,GAAKf,EAAMe,GAAKf,EAAOC,EACrCH,EAAEkB,KAAK,EAAGD,EAnBM,GAmBaf,EAAMe,EAnBnB,IAqBlBjB,EAAEmB,OApCmB,EAsCvBT,QAAA,WACEV,EAAEa,OACFb,EAAEc,UAAUd,EAAEe,QACdf,EAAEgB,UAAUT,KAAKF,EAAGE,KAAKD,GACzB,IAAK,IAAIW,EAAI,EAAGA,GAAKf,EAAMe,GAAKf,EAAOC,EACrCH,EAAEkB,KAAKD,EA5BS,GA4BU,EAAGA,EA5Bb,GA4BgCf,GAElDF,EAAEmB,OA7CmB,EA+CvBR,IAAA,WACEX,EAAEa,OACFb,EAAEc,UAAUd,EAAEoB,SACdpB,EAAEgB,UAAUT,KAAKF,EAAIH,EAAO,EAAGK,KAAKD,EAAIJ,EAAO,GAC/CF,EAAEqB,OAAOrB,EAAEC,OAAO,CAAC,EAAGD,EAAEsB,QAAStB,EAAEuB,GAAIvB,EAAEsB,QAAUtB,EAAEuB,MACrD,IAAK,IAAIN,EAAI,EAAGA,GAAY,EAAPf,EAAUe,GAAa,EAAPf,EAAYC,EAC/CH,EAAEW,KAAKT,EAAO,GAAIA,EAAO,EAAGe,EAAGA,EAAG,EAAGjB,EAAEsB,SAEzCtB,EAAEmB,OAvDmB,EAyDvBP,SAAA,WACEZ,EAAEa,OACFb,EAAEgB,UAAUT,KAAKF,EAAIH,EAAO,EAAGK,KAAKD,EAAIJ,EAAO,GAC/CF,EAAEqB,OAAOrB,EAAEC,OAAO,CAAC,EAAGD,EAAEsB,QAAStB,EAAEuB,GAAIvB,EAAEsB,QAAUtB,EAAEuB,MACrD,IAAK,IAAIN,GAAKf,EAAO,EAAIA,EAAOC,EAAOc,GAAKf,EAAO,EAAGe,GAAKf,EAAOC,EAChEH,EAAEkB,MACCD,EAhDa,IAiDbf,EAAO,EAjDM,GAkDdA,EAAO,EAlDO,GAmDde,EAnDc,IAsDlBjB,EAAEmB,OArEmB,KAyEzBnB,EAAEwB,MAAQ,WACRxB,EAAEyB,aAAa,IAAK,KACpBzB,EAAE0B,WAAW,KACb1B,EAAE2B,SACF3B,EAAE4B,SACF5B,EAAE6B,OA/DkB,KAkEtB7B,EAAE8B,KAAO,WACP,IAAK,IAAIzB,EAAI,EAAGA,EAAIL,EAAE+B,MAAO1B,GAAKH,EAChC,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAEgC,OAAQ1B,GAAKJ,EACjC,IAAIE,EAAOC,EAAGC,GAGlBN,EAAEiC,KAAK,EAAG,EAAGjC,EAAE+B,MAAO/B,EAAEgC,UAIb,0BAAGE,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcnC,OAAQA,EAAQoC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-04-12-js-df85049f6a6fd9c76e59.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const { GRID, LINES } = p.random([\r\n    {\r\n      GRID: 15,\r\n      LINES: 3,\r\n    },\r\n    {\r\n      GRID: 30,\r\n      LINES: 4,\r\n    },\r\n    {\r\n      GRID: 60,\r\n      LINES: 5,\r\n    },\r\n  ]);\r\n  const STROKE_WEIGHT = 0.5;\r\n\r\n  class Doodad {\r\n    constructor(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.drawFunc = p.random([\r\n        this.squareH,\r\n        this.squareV,\r\n        this.arc,\r\n        this.triangle,\r\n      ]);\r\n      this.drawFunc();\r\n    }\r\n    squareH() {\r\n      p.push();\r\n      p.strokeCap(p.SQUARE);\r\n      p.translate(this.x, this.y);\r\n      for (let i = 0; i <= GRID; i += GRID / LINES) {\r\n        p.line(0, i - STROKE_WEIGHT, GRID, i - STROKE_WEIGHT);\r\n      }\r\n      p.pop();\r\n    }\r\n    squareV() {\r\n      p.push();\r\n      p.strokeCap(p.SQUARE);\r\n      p.translate(this.x, this.y);\r\n      for (let i = 0; i <= GRID; i += GRID / LINES) {\r\n        p.line(i - STROKE_WEIGHT, 0, i - STROKE_WEIGHT, GRID);\r\n      }\r\n      p.pop();\r\n    }\r\n    arc() {\r\n      p.push();\r\n      p.strokeCap(p.PROJECT);\r\n      p.translate(this.x + GRID / 2, this.y + GRID / 2);\r\n      p.rotate(p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]));\r\n      for (let i = 0; i <= GRID * 2; i += (GRID * 2) / LINES) {\r\n        p.arc(-GRID / 2, -GRID / 2, i, i, 0, p.HALF_PI);\r\n      }\r\n      p.pop();\r\n    }\r\n    triangle() {\r\n      p.push();\r\n      p.translate(this.x + GRID / 2, this.y + GRID / 2);\r\n      p.rotate(p.random([0, p.HALF_PI, p.PI, p.HALF_PI + p.PI]));\r\n      for (let i = -GRID / 2 + GRID / LINES; i <= GRID / 2; i += GRID / LINES) {\r\n        p.line(\r\n          -i - STROKE_WEIGHT,\r\n          -GRID / 2 - STROKE_WEIGHT,\r\n          GRID / 2 - STROKE_WEIGHT,\r\n          i - STROKE_WEIGHT\r\n        );\r\n      }\r\n      p.pop();\r\n    }\r\n  }\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(255);\r\n    p.noLoop();\r\n    p.noFill();\r\n    p.stroke(STROKE_WEIGHT);\r\n  };\r\n\r\n  p.draw = function() {\r\n    for (let x = 0; x < p.width; x += GRID) {\r\n      for (let y = 0; y < p.height; y += GRID) {\r\n        new Doodad(x, y);\r\n      }\r\n    }\r\n    p.rect(0, 0, p.width, p.height);\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\r\n);\r\n"],"sourceRoot":""}