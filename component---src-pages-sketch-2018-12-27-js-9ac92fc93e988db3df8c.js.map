{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/27.js"],"names":["sketch","p","scalar","divisor","noDrawCount1","noDrawCount2","setup","createCanvas","background","random","floor","draw","stroke","strokeWeight","x","width","cos","frameCount","noise","y","height","sin","line","x2","y2","i","point","constrain","noLoop","location","path","pathname","description"],"mappings":"4FAAA,6CAGMA,EAAS,SAASC,GACtB,IACIC,EACAC,EACAC,EAAe,EACfC,EAAe,EAEnBJ,EAAEK,MAAQ,WACRL,EAAEM,aAAa,IAAK,KACpBN,EAAEO,WAAW,GACbN,EAASD,EAAEQ,OAAO,GAAI,IACtBN,EAAUF,EAAES,MAAMT,EAAEQ,OAAO,EAAG,KAGhCR,EAAEU,KAAO,WACPV,EAAEW,OAAO,KACTX,EAAEY,aAAaV,GACf,IAAMW,EACJb,EAAEc,MAAQ,EACTd,EAAEe,IAAIf,EAAEgB,WAAaf,GAAUD,EAAEgB,YAC/BhB,EAAEiB,MAAMjB,EAAEgB,aAAef,EAASC,IACjCgB,EACJlB,EAAEmB,OAAS,EACVnB,EAAEoB,IAAIpB,EAAEgB,WAAaf,GAAUD,EAAEgB,YAC/BhB,EAAEiB,MAAMjB,EAAEgB,aAAef,EAASC,IAErCW,EAzBW,IA0BXK,EA1BW,IA2BXL,EAAIb,EAAEc,MA3BK,IA4BXI,EAAIlB,EAAEmB,OA5BK,GA8BXnB,EAAEqB,KAAKR,EAAGK,EAAGlB,EAAEc,MAAQ,EAAGd,EAAEmB,OAAS,GAErChB,IAEFH,EAAEW,OAAO,GACTX,EAAEY,aAAaV,EAAU,GACzB,IAAMoB,EACJtB,EAAEc,MAAQ,EACTd,EAAEe,IAAIf,EAAEgB,YAAcf,GAAUC,EAAU,KAAOF,EAAEgB,YACjDhB,EAAEiB,MAAMjB,EAAEgB,YAAcf,GACvBsB,EACJvB,EAAEmB,OAAS,EACVnB,EAAEoB,IAAIpB,EAAEgB,YAAcf,GAAUC,EAAU,KAAOF,EAAEgB,YACjDhB,EAAEiB,MAAMjB,EAAEgB,YAAcf,GAW7B,GATEqB,EA7CW,IA8CXC,EA9CW,IA+CXD,EAAKtB,EAAEc,MA/CI,IAgDXS,EAAKvB,EAAEmB,OAhDI,GAkDXnB,EAAEqB,KAAKC,EAAIC,EAAIvB,EAAEc,MAAQ,EAAGd,EAAEmB,OAAS,GAEvCf,IAGAD,EAAgBH,EAAEgB,WAAaf,EAAU,GACzCG,EAAgBJ,EAAEgB,WAAaf,EAAU,EACzC,CACA,IAAK,IAAIuB,EAAI,EAAGA,EAAa,IAATvB,EAAeuB,IACjCxB,EAAEW,OAAOa,EAAItB,EAAU,EAAI,KAC3BF,EAAEyB,MACAzB,EAAE0B,UAAU1B,EAAEQ,OAAO,EAAGR,EAAEc,OA7DnB,GA6DmCd,EAAEc,MA7DrC,IA8DPd,EAAE0B,UAAU1B,EAAEQ,OAAO,EAAGR,EAAEmB,QA9DnB,GA8DoCnB,EAAEmB,OA9DtC,KAiEXnB,EAAE2B,YAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc7B,OAAQA,EAAQ8B,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-27-js-9ac92fc93e988db3df8c.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const MARGIN = 50;\r\n  let scalar;\r\n  let divisor;\r\n  let noDrawCount1 = 0;\r\n  let noDrawCount2 = 0;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(0);\r\n    scalar = p.random(10, 20);\r\n    divisor = p.floor(p.random(3, 5));\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.stroke(255);\r\n    p.strokeWeight(divisor);\r\n    const x =\r\n      p.width / 2 +\r\n      (p.cos(p.frameCount / scalar) * p.frameCount) /\r\n        (p.noise(p.frameCount) * (scalar / divisor));\r\n    const y =\r\n      p.height / 2 +\r\n      (p.sin(p.frameCount / scalar) * p.frameCount) /\r\n        (p.noise(p.frameCount) * (scalar / divisor));\r\n    if (\r\n      x > MARGIN &&\r\n      y > MARGIN &&\r\n      x < p.width - MARGIN &&\r\n      y < p.height - MARGIN\r\n    ) {\r\n      p.line(x, y, p.width / 2, p.height / 2);\r\n    } else {\r\n      noDrawCount1++;\r\n    }\r\n    p.stroke(0);\r\n    p.strokeWeight(divisor / 3);\r\n    const x2 =\r\n      p.width / 2 +\r\n      (p.cos(p.frameCount / (scalar / (divisor - 1))) * p.frameCount) /\r\n        (p.noise(p.frameCount) * scalar);\r\n    const y2 =\r\n      p.height / 2 +\r\n      (p.sin(p.frameCount / (scalar / (divisor - 1))) * p.frameCount) /\r\n        (p.noise(p.frameCount) * scalar);\r\n    if (\r\n      x2 > MARGIN &&\r\n      y2 > MARGIN &&\r\n      x2 < p.width - MARGIN &&\r\n      y2 < p.height - MARGIN\r\n    ) {\r\n      p.line(x2, y2, p.width / 2, p.height / 2);\r\n    } else {\r\n      noDrawCount2++;\r\n    }\r\n    if (\r\n      noDrawCount1 > (p.frameCount / scalar) * 2 &&\r\n      noDrawCount2 > (p.frameCount / scalar) * 2\r\n    ) {\r\n      for (let i = 0; i < scalar * 1000; i++) {\r\n        p.stroke(i % divisor ? 0 : 255);\r\n        p.point(\r\n          p.constrain(p.random(0, p.width), MARGIN, p.width - MARGIN),\r\n          p.constrain(p.random(0, p.height), MARGIN, p.height - MARGIN)\r\n        );\r\n      }\r\n      p.noLoop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Reload page for a different variation.\" />\r\n);\r\n"],"sourceRoot":""}