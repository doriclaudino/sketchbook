{"version":3,"sources":["webpack:///./src/pages/sketch/2020/01/14.js"],"names":["sketch","p","RENDER","getURLParams","render","setup","pixelDensity","frameRate","createCanvas","WEBGL","noStroke","createLoop","gif","open","draw","theta","animLoop","background","x","width","y","height","push","translate","rotateY","easeInOutQuad","map","TWO_PI","easeInOutQuart","abs","sin","fill","plane","pop","location","path","pathname","description"],"mappings":"4KAKMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,eAAeC,OAKhCH,EAAEI,MAAQ,WACRJ,EAAEK,aAAaJ,EAAS,EAAI,GAC5BD,EAAEM,UALS,IAMXN,EAAEO,aAAa,IAAK,IAAKP,EAAEQ,OAC3BR,EAAES,WACFT,EAAEU,WATa,GASQ,CACrBC,MAAKV,GAAS,CAAEE,QAAQ,EAAOS,MAAM,MAIzCZ,EAAEa,KAAO,WAAY,IACXC,EAAUd,EAAEe,SAAZD,MACRd,EAAEgB,WAAW,KAEb,IAAK,IAAIC,GAAKjB,EAAEkB,MAAQ,EAAGD,GAAKjB,EAAEkB,MAAQ,EAAGD,GAhBlC,GAiBT,IAAK,IAAIE,GAAKnB,EAAEoB,OAAS,EAAGD,GAAKnB,EAAEoB,OAAS,EAAGD,GAjBtC,GAkBPnB,EAAEqB,OACFrB,EAAEsB,UAAUL,EAAGE,EAAG,GAClBnB,EAAEuB,QACAT,GACGU,YAAcxB,EAAEyB,IAAIN,GAAInB,EAAEoB,OAAS,EAAGpB,EAAEoB,OAAS,EAAG,EAAG,IACtDpB,EAAE0B,OACF,EACAC,YAAe3B,EAAEyB,IAAIR,GAAIjB,EAAEkB,MAAQ,EAAGlB,EAAEkB,MAAQ,EAAG,EAAG,IACpDlB,EAAE0B,QACJF,YAAcxB,EAAE4B,IAAI5B,EAAE6B,IAAIf,MAEhCd,EAAE8B,KAAK,KACP9B,EAAEqB,OACFrB,EAAEsB,UAAU,EAAG,EAAG,GAClBtB,EAAE+B,MAhCK,OAiCP/B,EAAEgC,MACFhC,EAAEqB,OACFrB,EAAEsB,UAAU,EAAG,GAAI,GACnBtB,EAAE8B,KAAK,GACP9B,EAAE+B,MArCK,OAsCP/B,EAAEgC,MACFhC,EAAEgC,QAMK,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAclC,OAAQA,EAAQmC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2020-01-14-js-e1b245286e71a22d3be5.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport \"p5.createloop\";\r\nimport { easeInOutQuart, easeInOutQuad } from \"~lib/easing\";\r\n\r\nconst sketch = function(p) {\r\n  const RENDER = p.getURLParams().render;\r\n  const DURATION = 20;\r\n  const RATE = 30;\r\n  const GRID = 15;\r\n\r\n  p.setup = function() {\r\n    p.pixelDensity(RENDER ? 2 : 1);\r\n    p.frameRate(RATE);\r\n    p.createCanvas(660, 840, p.WEBGL);\r\n    p.noStroke();\r\n    p.createLoop(DURATION, {\r\n      gif: RENDER ? { render: false, open: true } : false,\r\n    });\r\n  };\r\n\r\n  p.draw = function() {\r\n    const { theta } = p.animLoop;\r\n    p.background(128);\r\n\r\n    for (let x = -p.width / 2; x <= p.width / 2; x += GRID) {\r\n      for (let y = -p.height / 2; y <= p.height / 2; y += GRID) {\r\n        p.push();\r\n        p.translate(x, y, 0);\r\n        p.rotateY(\r\n          theta +\r\n            (easeInOutQuad(p.map(y, -p.height / 2, p.height / 2, 0, 1)) *\r\n              p.TWO_PI *\r\n              2 +\r\n              easeInOutQuart(p.map(x, -p.width / 2, p.width / 2, 0, 1)) *\r\n                p.TWO_PI) *\r\n              easeInOutQuad(p.abs(p.sin(theta)))\r\n        );\r\n        p.fill(255);\r\n        p.push();\r\n        p.translate(0, 0, 1);\r\n        p.plane(GRID, GRID);\r\n        p.pop();\r\n        p.push();\r\n        p.translate(0, 0, -1);\r\n        p.fill(0);\r\n        p.plane(GRID, GRID);\r\n        p.pop();\r\n        p.pop();\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\r\n);\r\n"],"sourceRoot":""}