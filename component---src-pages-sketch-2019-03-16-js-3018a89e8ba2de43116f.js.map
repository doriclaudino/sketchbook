{"version":3,"sources":["webpack:///./src/pages/sketch/2019/03/16.js"],"names":["sketch","p","P_SIZE","colors","particles","Particle","this","vector","createVector","randomGaussian","width","height","velocity","random","onCanvas","draw","x","y","size","map","dist","ellipse","add","noise","frameCount","setup","createCanvas","colorMode","HSB","color","background","Array","from","length","noStroke","fill","lerpColor","sin","forEach","filter","P_COUNT","noLoop","location","path","pathname","description"],"mappings":"gjBAGA,IAAMA,EAAS,SAASC,GACtB,IACMC,EAAS,GAEXC,EAAS,GACTC,EAAY,GAEVC,EAPmB,WAQvB,aACEC,KAAKC,OAASN,EAAEO,aACdP,EAAEQ,eAAyB,KAAVR,EAAES,MAAeR,GAClCD,EAAEQ,eAA0B,KAAXR,EAAEU,OAAgBT,IAErCI,KAAKM,SAAWX,EAAEO,aAAaP,EAAEY,QAAQ,EAAG,GAAIZ,EAAEY,QAAQ,EAAG,IAC7DP,KAAKQ,UAAW,EAdK,mBAgBvBC,KAAA,WAAQ,IAAD,EACYT,KAAKC,OAAdS,EADH,EACGA,EAAGC,EADN,EACMA,EACLC,EAAOjB,EAAEkB,IACblB,EAAEmB,KAAKJ,EAAGC,EAAa,KAAVhB,EAAES,MAA0B,KAAXT,EAAEU,QAChC,EACAV,EAAEmB,KAAK,EAAG,EAAa,KAAVnB,EAAES,MAA0B,KAAXT,EAAEU,QAChC,EACAT,GAGEI,KAAKQ,WACPb,EAAEoB,QAAQL,EAAGC,EAAGC,GAChBZ,KAAKC,OAAOe,IAAIhB,KAAKM,UACrBN,KAAKM,SAASU,IACZrB,EAAEkB,IAAIlB,EAAEsB,MAAMtB,EAAEuB,WAAa,IAAKR,EAAI,GAAIC,EAAI,IAAK,EAAG,GAAI,IAAM,KAChEhB,EAAEkB,IAAIlB,EAAEsB,MAAMtB,EAAEuB,WAAa,IAAKP,EAAI,GAAID,EAAI,IAAK,EAAG,GAAI,IAAM,QAIjEA,GAAKd,GAAUc,EAAIf,EAAES,MAAQR,KAC7Be,GAAKf,GAAUe,EAAIhB,EAAEU,OAAST,KAE/BI,KAAKQ,UAAW,IAtCG,KA2CzBb,EAAEwB,MAAQ,WACRxB,EAAEyB,aAAa,IAAK,KACpBzB,EAAE0B,UAAU1B,EAAE2B,IAAK,KACnBzB,EAAS,CACPF,EAAE4B,MAAM5B,EAAEY,OAAO,EAAG,IAAK,GAAI,IAC7BZ,EAAE4B,MAAM5B,EAAEY,OAAO,GAAI,KAAM,GAAI,KAEjCZ,EAAE6B,WAAW3B,EAAO,IACpBC,EAAY2B,MAAMC,KAAK,CAAEC,OAlDX,MAkD8B,kBAAM,IAAI5B,KACtDJ,EAAEiC,YAGJjC,EAAEc,KAAO,WACPd,EAAEkC,KACAlC,EAAEmC,UAAF,MAAAnC,EAAC,EAAcE,GAAd,QAAsBF,EAAEkB,IAAIlB,EAAEoC,IAAIpC,EAAEuB,WAAa,MAAO,EAAG,EAAG,EAAG,OAEpEpB,EAAUkC,SAAQ,SAAArC,GAAC,OAAIA,EAAEc,UACrBX,EAAUmC,QAAO,SAAAtC,GAAC,OAAKA,EAAEa,YAAUmB,OAASO,KAC9CvC,EAAEwC,WAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACE1C,OAAQA,EACR2C,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2019-03-16-js-3018a89e8ba2de43116f.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const P_COUNT = 500;\r\n  const P_SIZE = 30;\r\n\r\n  let colors = [];\r\n  let particles = [];\r\n\r\n  class Particle {\r\n    constructor() {\r\n      this.vector = p.createVector(\r\n        p.randomGaussian(p.width * 0.666, P_SIZE),\r\n        p.randomGaussian(p.height * 0.666, P_SIZE)\r\n      );\r\n      this.velocity = p.createVector(p.random(-1, 1), p.random(-1, 1));\r\n      this.onCanvas = true;\r\n    }\r\n    draw() {\r\n      const { x, y } = this.vector;\r\n      const size = p.map(\r\n        p.dist(x, y, p.width * 0.666, p.height * 0.666),\r\n        0,\r\n        p.dist(0, 0, p.width * 0.666, p.height * 0.666),\r\n        1,\r\n        P_SIZE\r\n      );\r\n\r\n      if (this.onCanvas) {\r\n        p.ellipse(x, y, size);\r\n        this.vector.add(this.velocity);\r\n        this.velocity.add(\r\n          p.map(p.noise(p.frameCount / 100, x / 10, y / 10), 0, 1, -0.05, 0.05),\r\n          p.map(p.noise(p.frameCount / 100, y / 10, x / 10), 0, 1, -0.05, 0.05)\r\n        );\r\n      }\r\n      if (\r\n        (x < -P_SIZE || x > p.width + P_SIZE) &&\r\n        (y < -P_SIZE || y > p.height + P_SIZE)\r\n      ) {\r\n        this.onCanvas = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.colorMode(p.HSB, 100);\r\n    colors = [\r\n      p.color(p.random(0, 50), 50, 25),\r\n      p.color(p.random(50, 100), 50, 75),\r\n    ];\r\n    p.background(colors[1]);\r\n    particles = Array.from({ length: P_COUNT }, () => new Particle());\r\n    p.noStroke();\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.fill(\r\n      p.lerpColor(...colors, p.map(p.sin(p.frameCount / 100), -1, 1, 0, 1))\r\n    );\r\n    particles.forEach(p => p.draw());\r\n    if (particles.filter(p => !p.onCanvas).length > P_COUNT / 2) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout\r\n    sketch={sketch}\r\n    path={location.pathname}\r\n    description=\"Refresh page for a different color variation\"\r\n  />\r\n);\r\n"],"sourceRoot":""}