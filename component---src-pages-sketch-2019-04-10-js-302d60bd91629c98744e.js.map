{"version":3,"sources":["webpack:///./src/pages/sketch/2019/04/10.js","webpack:///./src/lib/polarToCartesian.js","webpack:///./src/lib/shuffle.js"],"names":["sketch","p","radius","getColorVals","random","HUE","shuffle","SAT","BRIGHT","reverse","setup","createCanvas","colorMode","HSB","dist","width","height","draw","background","forEach","_","i","push","blendMode","HARD_LIGHT","translate","stroke","strokeWeight","pow","r","TWO_PI","noise","frameCount","start","polarToCartesian","end","line","pop","location","path","pathname","description","polarToCartesianX","center","angle","distance","Math","cos","polarToCartesianY","sin","polarToCartesianEllipse","centerX","centerY","radiusX","radiusY","asArray","x","y","a","length","j","floor"],"mappings":"6jBAKA,IAAMA,EAAS,SAASC,GACtB,IAKIC,EALEC,EAAe,iBAAM,CAACF,EAAEG,OAAO,IAAKH,EAAEG,OAAO,GAAI,IAAKH,EAAEG,OAAO,GAAI,MACnEC,EAAMC,YAAQH,KACdI,EAAMD,YAAQH,KACdK,EAASL,IAAeM,UAI9BR,EAAES,MAAQ,WACRT,EAAEU,aAAa,IAAK,KACpBV,EAAEW,UAAUX,EAAEY,IAAK,KAEnBX,EAASD,EAAEa,KAAK,EAAG,EAAGb,EAAEc,MAAQ,EAAGd,EAAEe,OAAS,IAGhDf,EAAEgB,KAAO,WACPhB,EAAEiB,WAAWb,EAAI,GAAIE,EAAI,GAAK,EAAGC,EAAO,GAAK,GAE7CH,EAAIc,SAAQ,SAACC,EAAGC,GACdpB,EAAEqB,OACFrB,EAAEsB,UAAUtB,EAAEuB,YACdvB,EAAEwB,UAAUxB,EAAEc,MAAQ,EAAGd,EAAEe,OAAS,GACpCf,EAAEyB,OAAOrB,EAAIgB,GAAId,EAAIc,GAAIb,EAAOa,IAChCpB,EAAE0B,aAAa,EAAI1B,EAAE2B,IAAIP,EAAG,GAAK,GAAKA,EAAI,IAE1C,IACE,IAAIQ,EAAI,EACRA,EAAI5B,EAAE6B,OACND,GACE5B,EAAE6B,QACD,GACC7B,EAAE8B,OACCV,EAAI,GAAK,KACTA,EAAI,GAAK,IACVpB,EAAE+B,YAAwB,KAATX,EAAI,MAE3B,CACA,IAAMY,EAAQC,YAAiB,EAAG,EAAGL,EAAG3B,GAAQ,GAC1CiC,EAAM,CAACF,EAAM,IAAKA,EAAM,IAC9BhC,EAAEmC,KAAF,MAAAnC,EAAC,EAASgC,GAAT,OAAmBE,IACpBlC,EAAEmC,KAAKH,EAAM,GAAIA,EAAM,GAAIE,EAAI,GAAIA,EAAI,IAEzClC,EAAEoC,WAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACEtC,OAAQA,EACRuC,KAAMD,EAASE,SACfC,YAAY,8C,kCCxDhB,0GAAMC,EAAoB,SAACC,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKC,IAAIH,GAASC,GAE9BG,EAAoB,SAACL,EAAQC,EAAOC,GACxC,OAAOF,EAASG,KAAKG,IAAIL,GAASC,GAa9BK,EAA0B,SAC9BC,EACAC,EACAR,EACAS,EACAC,EACAC,QACG,IADHA,OAAU,GAEV,IAAMC,EAAIL,EAAUL,KAAKC,IAAIH,GAASS,EAChCI,EAAIL,EAAUN,KAAKG,IAAIL,GAASU,EACtC,OAAOC,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,MAIlBvB,IAzBU,SACvBiB,EACAC,EACAR,EACAC,EACAU,QACG,IADHA,OAAU,GAEV,IAAMC,EAAId,EAAkBS,EAASP,EAAOC,GACtCY,EAAIT,EAAkBI,EAASR,EAAOC,GAC5C,OAAOU,EAAU,CAACC,EAAGC,GAAK,CAAED,IAAGC,O,kCCflB,SAASnD,EAAQoD,GAC9B,IAAK,IAAIrC,EAAIqC,EAAEC,OAAS,EAAGtC,EAAI,EAAGA,IAAK,CACrC,IAAMuC,EAAId,KAAKe,MAAMf,KAAK1C,UAAYiB,EAAI,IADL,EAEtB,CAACqC,EAAEE,GAAIF,EAAErC,IAAvBqC,EAAErC,GAFkC,KAE9BqC,EAAEE,GAF4B,KAIvC,OAAOF,EALT","file":"component---src-pages-sketch-2019-04-10-js-302d60bd91629c98744e.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport polarToCartesian from \"~lib/polarToCartesian\";\r\nimport shuffle from \"~lib/shuffle\";\r\n\r\nconst sketch = function(p) {\r\n  const getColorVals = () => [p.random(33), p.random(33, 66), p.random(66, 99)];\r\n  const HUE = shuffle(getColorVals());\r\n  const SAT = shuffle(getColorVals());\r\n  const BRIGHT = getColorVals().reverse();\r\n\r\n  let radius;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.colorMode(p.HSB, 100);\r\n\r\n    radius = p.dist(0, 0, p.width / 2, p.height / 2);\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.background(HUE[0], SAT[0] / 2, BRIGHT[0] / 2);\r\n\r\n    HUE.forEach((_, i) => {\r\n      p.push();\r\n      p.blendMode(p.HARD_LIGHT);\r\n      p.translate(p.width / 2, p.height / 2);\r\n      p.stroke(HUE[i], SAT[i], BRIGHT[i]);\r\n      p.strokeWeight(6 * p.pow(i, 2) - 24 * i + 30);\r\n\r\n      for (\r\n        let r = 0;\r\n        r < p.TWO_PI;\r\n        r +=\r\n          p.TWO_PI /\r\n          (50 *\r\n            p.noise(\r\n              (i + 1) / 100,\r\n              (i + 2) / 100,\r\n              p.frameCount / ((i + 1) * 4000)\r\n            ))\r\n      ) {\r\n        const start = polarToCartesian(0, 0, r, radius, true);\r\n        const end = [start[0], -start[1]];\r\n        p.line(...start, ...end);\r\n        p.line(start[1], start[0], end[1], end[0]);\r\n      }\r\n      p.pop();\r\n    });\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout\r\n    sketch={sketch}\r\n    path={location.pathname}\r\n    description=\"Refresh page for a different variation.\"\r\n  />\r\n);\r\n","const polarToCartesianX = (center, angle, distance) => {\n  return center + Math.cos(angle) * distance;\n};\nconst polarToCartesianY = (center, angle, distance) => {\n  return center + Math.sin(angle) * distance;\n};\nconst polarToCartesian = (\n  centerX,\n  centerY,\n  angle,\n  distance,\n  asArray = false\n) => {\n  const x = polarToCartesianX(centerX, angle, distance);\n  const y = polarToCartesianY(centerY, angle, distance);\n  return asArray ? [x, y] : { x, y };\n};\nconst polarToCartesianEllipse = (\n  centerX,\n  centerY,\n  angle,\n  radiusX,\n  radiusY,\n  asArray = false\n) => {\n  const x = centerX + Math.cos(angle) * radiusX;\n  const y = centerY + Math.sin(angle) * radiusY;\n  return asArray ? [x, y] : { x, y };\n};\n\nexport { polarToCartesianX, polarToCartesianY, polarToCartesianEllipse };\nexport default polarToCartesian;\n","export default function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n"],"sourceRoot":""}