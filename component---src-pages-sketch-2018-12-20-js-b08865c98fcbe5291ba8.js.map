{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/20.js"],"names":["sketch","p","size","xFocus","yFocus","setup","createCanvas","background","strokeWeight","random","width","height","draw","xEnd","yEnd","xHandle","yHandle","cos","frameCount","TWO_PI","sin","x","y","noiseVal","noise","xStart","yStart","clr","stroke","noFill","bezier","fill","ellipse","noLoop","location","path","pathname","description"],"mappings":"mJAGMA,EAAS,SAASC,GACtB,IACIC,EACAC,EACAC,EAEJH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,IAAK,KACpBL,EAAEM,WAAW,KACbN,EAAEO,aAAa,KACfN,EAAOD,EAAEQ,OAAO,IAAK,KACrBN,EAASF,EAAES,MAAQ,EACnBN,EAASH,EAAEU,OAAS,GAGtBV,EAAEW,KAAO,WACP,IAAIC,EACAC,EACAC,EACAC,EACJH,EACEV,EACCF,EAAEgB,IAAKhB,EAAEiB,WArBC,MAqBuBjB,EAAEkB,OArBzB,OAqB6CjB,EAAQ,EAClEY,EACEV,EACCH,EAAEmB,IAAKnB,EAAEiB,WAxBC,MAwBuBjB,EAAEkB,OAxBzB,OAwB6CjB,EAAQ,EAClEa,EACEZ,EAASF,EAAEgB,IAAKhB,EAAEiB,WA1BP,MA0B+BjB,EAAEkB,OA1BjC,OA0BqDjB,EAClEc,EACEZ,EAASH,EAAEmB,IAAKnB,EAAEiB,WA5BP,MA4B+BjB,EAAEkB,OA5BjC,OA4BqDjB,EAClE,IAAMmB,EAAIlB,EAASF,EAAEgB,IAAIhB,EAAEiB,WA7Bd,OA6BsChB,EAAO,GACpDoB,EAAIlB,EAASH,EAAEmB,IAAInB,EAAEiB,WA9Bd,OA8BsChB,EAAO,GACpDqB,EAAWtB,EAAEuB,MAAMvB,EAAEiB,YAAchB,EACnCuB,EACJtB,EAASF,EAAEgB,IAAKhB,EAAEiB,WAjCP,KAiC8BhB,IAASA,EAAOqB,GACrDG,EACJtB,EAASH,EAAEmB,IAAKnB,EAAEiB,WAnCP,KAmC8BhB,IAASA,EAAOqB,GACrDI,EAAG,iBAAoB1B,EAAEuB,MAAMH,EAAGC,GAAK,EAApC,IACTrB,EAAE2B,OAAOD,GACT1B,EAAE4B,SACF5B,EAAE6B,OAAOT,EAAGC,EAAGG,EAAQC,EAAQX,EAASC,EAASH,EAAMC,GACvDb,EAAE8B,KAAKJ,GACP1B,EAAE+B,QAAQP,EAAQC,EAAQ,GAzCb,OA0CTzB,EAAEiB,YACJjB,EAAEgC,WAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAclC,OAAQA,EAAQmC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-20-js-b08865c98fcbe5291ba8.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const points = 2160;\r\n  let size;\r\n  let xFocus;\r\n  let yFocus;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(255);\r\n    p.strokeWeight(0.75);\r\n    size = p.random(250, 350);\r\n    xFocus = p.width / 2;\r\n    yFocus = p.height / 2;\r\n  };\r\n\r\n  p.draw = function() {\r\n    let xEnd;\r\n    let yEnd;\r\n    let xHandle;\r\n    let yHandle;\r\n    xEnd =\r\n      xFocus +\r\n      (p.cos((p.frameCount % points) * (p.TWO_PI / points)) * size) / 2;\r\n    yEnd =\r\n      yFocus +\r\n      (p.sin((p.frameCount % points) * (p.TWO_PI / points)) * size) / 2;\r\n    xHandle =\r\n      xFocus + p.cos((p.frameCount % points) * (p.TWO_PI / points)) * size;\r\n    yHandle =\r\n      yFocus + p.sin((p.frameCount % points) * (p.TWO_PI / points)) * size;\r\n    const x = xFocus + p.cos(p.frameCount % points) * (size / 7);\r\n    const y = yFocus + p.sin(p.frameCount % points) * (size / 7);\r\n    const noiseVal = p.noise(p.frameCount) * size;\r\n    const xStart =\r\n      xFocus + p.cos((p.frameCount % points) + size) * (size + noiseVal);\r\n    const yStart =\r\n      yFocus + p.sin((p.frameCount % points) + size) * (size + noiseVal);\r\n    const clr = `rgba(0, 0, 0, ${p.noise(x, y) / 2})`;\r\n    p.stroke(clr);\r\n    p.noFill();\r\n    p.bezier(x, y, xStart, yStart, xHandle, yHandle, xEnd, yEnd);\r\n    p.fill(clr);\r\n    p.ellipse(xStart, yStart, 2);\r\n    if (p.frameCount === points) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Reload page for a different variation.\" />\r\n);\r\n"],"sourceRoot":""}