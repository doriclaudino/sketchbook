{"version":3,"sources":["webpack:///./src/lib/isPrime.js","webpack:///./src/pages/sketch/2019/01/08.js"],"names":["isPrime","n","x","sketch","p","magicNumber","margin","maxDist","vertexCount","vertices","showDots","setup","createCanvas","background","floor","random","sliceWidth","width","i","concat","Array","from","_","k","angle","map","TWO_PI","distance","constrain","randomGaussian","noise","vector","createVector","cos","height","sin","reached","draw","push","stroke","strokeWeight","filter","v","forEach","point","y","pop","reachedVector","unreachedIndex","reachedVertices","shortestDist","vertex","thisDist","dist","line","length","noLoop","mousePressed","location","path","pathname","description"],"mappings":"8FAAe,SAASA,EAAQC,GAC9B,GAAU,IAANA,EACF,OAAO,EACF,GAAU,IAANA,EACT,OAAO,EAEP,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAGC,IACrB,GAAID,EAAIC,GAAM,EACZ,OAAO,EAGX,OAAO,EAXX,mC,iHCIMC,EAAS,SAASC,GACtB,IACIC,EAEAC,EAEAC,EAHAC,EAAc,EAEdC,EAAW,GAEXC,GAAW,EAEfN,EAAEO,MAAQ,WAIR,IAHAP,EAAEQ,aAAa,IAAK,KACpBR,EAAES,WAAW,KACbR,EAAcD,EAAEU,MAAMV,EAAEW,OAAO,EAAG,KAC1Bf,YAAQQ,IACdA,EAAcJ,EAAEU,MAAMV,EAAEW,OAAqB,GAAdV,EAAgC,GAAdA,IAEnD,IAAMW,EAAaZ,EAAEa,MAAQ,EAAIZ,EACjCC,EAASU,EAAaX,EACtBE,EAAUH,EAAEa,MAAQ,EAAIX,EACxB,IAVmB,eAUVY,GACPT,EAAWA,EAASU,OAClBC,MAAMC,KAAKD,MAAMZ,GAAeU,EAAI,KAAK,SAACI,EAAGC,GAC3C,IAAMC,EAAQpB,EAAEqB,IAAIF,EAAIlB,EAAa,EAAGG,EAAa,EAAGJ,EAAEsB,QACpDC,EAAWvB,EAAEwB,UACjBxB,EAAEyB,gBACCX,EAAIF,GAAcE,EAAI,GAAKF,GAAc,EAC1CA,EAAaX,EAAcD,EAAE0B,MAAMN,GAASnB,GAE9C,EACAE,GAEF,MAAO,CACLwB,OAAQ3B,EAAE4B,aACR5B,EAAEa,MAAQ,EAAIb,EAAE6B,IAAIT,GAASG,EAC7BvB,EAAE8B,OAAS,EAAI9B,EAAE+B,IAAIX,GAASG,GAEhCS,SAAS,QAjBRlB,EAAI,EAAGA,EAAIb,EAAaa,IAAM,EAA9BA,GAsBTT,EAASL,EAAEU,MAAMV,EAAEW,OAAOP,KAAe4B,SAAU,GAGrDhC,EAAEiC,KAAO,WACPjC,EAAEkC,OACFlC,EAAEmC,OAAO7B,EAAW,MAAQ,KAC5BN,EAAEoC,aAAa,GACf/B,EACGgC,QAAO,SAAAC,GAAC,OAAKA,EAAEN,WACfO,SAAQ,gBAAGZ,EAAH,EAAGA,OAAH,OAAgB3B,EAAEwC,MAAMb,EAAO7B,EAAG6B,EAAOc,MACpDzC,EAAE0C,MACF,IAEIC,EACAC,EAHEC,EAAkBxC,EAASgC,QAAO,SAAAC,GAAC,OAAIA,EAAEN,WAC3Cc,EAAe3C,EAGnBH,EAAEoC,aAAa,GACf/B,EAASkC,SAAQ,SAACQ,EAAQjC,GACnBiC,EAAOf,SACVa,EAAgBN,SAAQ,YAAiB,IAAdZ,EAAa,EAAbA,OACnBqB,EAAWhD,EAAEiD,KACjBtB,EAAO7B,EACP6B,EAAOc,EACPM,EAAOpB,OAAO7B,EACdiD,EAAOpB,OAAOc,GAEZO,EAAWF,IACbA,EAAeE,EACfJ,EAAiB9B,EACjB6B,EAAgBhB,SAKxB3B,EAAEkD,KACAP,EAAc7C,EACd6C,EAAcF,EACdpC,EAASuC,GAAgBjB,OAAO7B,EAChCO,EAASuC,GAAgBjB,OAAOc,GAElCpC,EAASuC,GAAgBZ,SAAU,EAC/B3B,EAASgC,QAAO,SAAAC,GAAC,OAAIA,EAAEN,WAASmB,SAAW9C,EAAS8C,QACtDnD,EAAEoD,UAINpD,EAAEqD,aAAe,WACf/C,GAAYA,IAID,0BAAGgD,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CACEvD,OAAQA,EACRwD,KAAMD,EAASE,SACfC,YAAY","file":"component---src-pages-sketch-2019-01-08-js-662cc8fbd5cd25aef8fd.js","sourcesContent":["export default function isPrime(n) {\n  if (n === 1) {\n    return false;\n  } else if (n === 2) {\n    return true;\n  } else {\n    for (var x = 2; x < n; x++) {\n      if (n % x === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport isPrime from \"~lib/isPrime\";\r\n\r\nconst sketch = function(p) {\r\n  const goldenRatio = 1.6180339887;\r\n  let magicNumber;\r\n  let vertexCount = 1;\r\n  let margin;\r\n  let vertices = [];\r\n  let maxDist;\r\n  let showDots = true;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(255);\r\n    magicNumber = p.floor(p.random(5, 8));\r\n    while (!isPrime(vertexCount)) {\r\n      vertexCount = p.floor(p.random(magicNumber * 20, magicNumber * 25));\r\n    }\r\n    const sliceWidth = p.width / 2 / magicNumber;\r\n    margin = sliceWidth / magicNumber;\r\n    maxDist = p.width / 2 - margin;\r\n    for (let i = 0; i < magicNumber; i++) {\r\n      vertices = vertices.concat(\r\n        Array.from(Array(vertexCount * (i + 1)), (_, k) => {\r\n          const angle = p.map(k * magicNumber, 0, vertexCount, 0, p.TWO_PI);\r\n          const distance = p.constrain(\r\n            p.randomGaussian(\r\n              (i * sliceWidth + (i + 1) * sliceWidth) / 2,\r\n              sliceWidth / magicNumber + p.noise(angle) * magicNumber\r\n            ),\r\n            0,\r\n            maxDist\r\n          );\r\n          return {\r\n            vector: p.createVector(\r\n              p.width / 2 + p.cos(angle) * distance,\r\n              p.height / 2 + p.sin(angle) * distance\r\n            ),\r\n            reached: false,\r\n          };\r\n        })\r\n      );\r\n    }\r\n    vertices[p.floor(p.random(vertexCount))].reached = true;\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.push();\r\n    p.stroke(showDots ? \"red\" : 255);\r\n    p.strokeWeight(1);\r\n    vertices\r\n      .filter(v => !v.reached)\r\n      .forEach(({ vector }) => p.point(vector.x, vector.y));\r\n    p.pop();\r\n    const reachedVertices = vertices.filter(v => v.reached);\r\n    let shortestDist = maxDist;\r\n    let reachedVector;\r\n    let unreachedIndex;\r\n    p.strokeWeight(2);\r\n    vertices.forEach((vertex, i) => {\r\n      if (!vertex.reached) {\r\n        reachedVertices.forEach(({ vector }) => {\r\n          const thisDist = p.dist(\r\n            vector.x,\r\n            vector.y,\r\n            vertex.vector.x,\r\n            vertex.vector.y\r\n          );\r\n          if (thisDist < shortestDist) {\r\n            shortestDist = thisDist;\r\n            unreachedIndex = i;\r\n            reachedVector = vector;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    p.line(\r\n      reachedVector.x,\r\n      reachedVector.y,\r\n      vertices[unreachedIndex].vector.x,\r\n      vertices[unreachedIndex].vector.y\r\n    );\r\n    vertices[unreachedIndex].reached = true;\r\n    if (vertices.filter(v => v.reached).length === vertices.length) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n\r\n  p.mousePressed = function() {\r\n    showDots = !showDots;\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout\r\n    sketch={sketch}\r\n    path={location.pathname}\r\n    description=\"\r\n      Be patient. Reload page for a different variation. Click sketch to toggle\r\n      the vertices.\r\n    \"\r\n  />\r\n);\r\n"],"sourceRoot":""}