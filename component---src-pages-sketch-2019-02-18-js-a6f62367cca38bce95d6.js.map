{"version":3,"sources":["webpack:///./src/pages/sketch/2019/02/18.js"],"names":["sketch","p","myFont","rOpt","gOpt","bOpt","ALPHA","letter","x","y","reverse","CF","angle","abs","sin","cos","tan","PI","letterIndex","points","lineCount","preload","loadFont","withPrefix","setup","createCanvas","background","textAlign","LEFT","textFont","textSize","textLeading","Array","from","Set","length","random","draw","fill","noStroke","a","text","frameCount","letterPoints","textToPoints","sampleFactor","concat","map","position","createVector","velocity","acceleration","stroke","forEach","i","add","width","height","splice","points2","reached","shortest","dist","reachedIndex","unreachedIndex","point","point2","i2","THIS_DIST","line","filter","noLoop","location","path","pathname"],"mappings":"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","file":"component---src-pages-sketch-2019-02-18-js-a6f62367cca38bce95d6.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst sketch = function(p) {\r\n  const ALPHA = [\r\n    { letter: \"T\", x: 352 - 15, y: 225 },\r\n    { letter: \"H\", x: 431 - 15, y: 225 },\r\n    { letter: \"I\", x: 508 - 15, y: 225 },\r\n    { letter: \"S\", x: 586 - 15, y: 225 },\r\n    { letter: \"I\", x: 93 - 15, y: 375 },\r\n    { letter: \"S\", x: 171 - 15, y: 375 },\r\n    { letter: \"J\", x: 327 - 15, y: 375 },\r\n    { letter: \"U\", x: 405 - 15, y: 375 },\r\n    { letter: \"S\", x: 483 - 15, y: 375 },\r\n    { letter: \"T\", x: 561 - 15, y: 375 },\r\n    { letter: \"I\", x: 64 - 15, y: 525 },\r\n    { letter: \"N\", x: 142 - 15, y: 525 },\r\n    { letter: \"Y\", x: 298 - 15, y: 525 },\r\n    { letter: \"O\", x: 376 - 15, y: 525 },\r\n    { letter: \"U\", x: 454 - 15, y: 525 },\r\n    { letter: \"R\", x: 532 - 15, y: 525 },\r\n    { letter: \"H\", x: 37 - 15, y: 675 },\r\n    { letter: \"E\", x: 115 - 15, y: 675 },\r\n    { letter: \"A\", x: 193 - 15, y: 675 },\r\n    { letter: \"D\", x: 271 - 15, y: 675 },\r\n  ].reverse();\r\n  const FONT_SIZE = 150;\r\n  const FRAME_FREQUENCY = 60;\r\n  const ITERATIONS = 2;\r\n  const MARGIN = 20;\r\n  const CF = [\r\n    angle => p.abs(p.sin(angle)) * 240,\r\n    angle => p.abs(p.cos(angle)) * 240,\r\n    angle => p.abs(p.tan(angle)) * 240,\r\n    angle => p.abs(p.sin(angle + p.PI)) * 240,\r\n    angle => p.abs(p.cos(angle + p.PI)) * 240,\r\n    angle => p.abs(p.tan(angle + p.PI)) * 240,\r\n    angle => p.abs(p.sin(-angle)) * 240,\r\n    angle => p.abs(p.cos(-angle)) * 240,\r\n    angle => p.abs(p.tan(-angle)) * 240,\r\n    angle => p.abs(p.sin(-angle + p.PI)) * 240,\r\n    angle => p.abs(p.cos(-angle + p.PI)) * 240,\r\n    angle => p.abs(p.tan(-angle + p.PI)) * 240,\r\n  ];\r\n  let myFont;\r\n  let letterIndex = 0;\r\n  let points = [];\r\n  let lineCount = 0;\r\n  let rOpt;\r\n  let gOpt;\r\n  let bOpt;\r\n\r\n  function setStroke(a) {\r\n    p.stroke(rOpt(a), gOpt(a), bOpt(a), 64);\r\n  }\r\n\r\n  p.preload = function() {\r\n    myFont = p.loadFont(withPrefix(\"/assets/Cousine-BoldItalic.otf\"));\r\n  };\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(255);\r\n    p.textAlign(p.LEFT);\r\n    p.textFont(myFont);\r\n    p.textSize(130);\r\n    p.textLeading(150);\r\n    while (Array.from(new Set([rOpt, gOpt, bOpt])).length < 3) {\r\n      rOpt = p.random(CF);\r\n      gOpt = p.random(CF);\r\n      bOpt = p.random(CF);\r\n    }\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.fill(255, lineCount < ITERATIONS ? 255 : 0);\r\n    p.noStroke();\r\n    const { letter, x, y } = ALPHA[letterIndex];\r\n    p.text(letter, x, y);\r\n    if (p.frameCount % FRAME_FREQUENCY === 1) {\r\n      const letterPoints = myFont.textToPoints(letter, x, y, 130, {\r\n        sampleFactor: 0.05,\r\n      });\r\n      points = points.concat(\r\n        letterPoints.map(({ x, y }) => ({\r\n          position: p.createVector(x, y),\r\n          velocity: p.createVector(p.random(-2, 2), p.random(-2, 2)),\r\n          acceleration: p.createVector(\r\n            p.random(-0.05, 0.05),\r\n            p.random(-0.05, 0.05)\r\n          ),\r\n        }))\r\n      );\r\n    }\r\n    setStroke(p.frameCount / (FRAME_FREQUENCY * ALPHA.length * ITERATIONS));\r\n\r\n    points.forEach(({ position, velocity, acceleration }, i) => {\r\n      points[i].position = position.add(velocity.add(acceleration));\r\n      if (\r\n        position.x < MARGIN ||\r\n        position.x > p.width - MARGIN ||\r\n        position.y < MARGIN ||\r\n        position.y > p.height - MARGIN\r\n      ) {\r\n        points.splice(i, 1);\r\n      }\r\n    });\r\n    if (points.length > 0) {\r\n      let points2 = points.map(p => ({\r\n        position: p.position,\r\n        reached: false,\r\n      }));\r\n      points2[0].reached = true;\r\n      while (points2.filter(point => point.reached).length < points2.length) {\r\n        const MAX = p.dist(0, 0, p.width, p.height) * 2;\r\n        let shortest = MAX;\r\n        let reachedIndex;\r\n        let unreachedIndex;\r\n        points2.forEach((point, i) => {\r\n          if (point.reached) return;\r\n          points2.forEach((point2, i2) => {\r\n            if (point2.reached) return;\r\n            const THIS_DIST = p.dist(\r\n              point.position.x,\r\n              point.position.y,\r\n              point2.position.x,\r\n              point2.position.y\r\n            );\r\n            if (THIS_DIST < shortest) {\r\n              shortest = THIS_DIST;\r\n              reachedIndex = i;\r\n              unreachedIndex = i2;\r\n            }\r\n          });\r\n        });\r\n        p.line(\r\n          points2[reachedIndex].position.x,\r\n          points2[reachedIndex].position.y,\r\n          points2[unreachedIndex].position.x,\r\n          points2[unreachedIndex].position.y\r\n        );\r\n        points2[unreachedIndex].reached = true;\r\n      }\r\n    }\r\n    if (p.frameCount % FRAME_FREQUENCY === 0) {\r\n      letterIndex++;\r\n    }\r\n    if (letterIndex === ALPHA.length) {\r\n      letterIndex = 0;\r\n      lineCount++;\r\n    }\r\n    if (lineCount > ITERATIONS) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} />\r\n);\r\n"],"sourceRoot":""}