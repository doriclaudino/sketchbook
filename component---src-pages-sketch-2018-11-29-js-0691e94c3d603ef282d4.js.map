{"version":3,"sources":["webpack:///./src/pages/sketch/2018/11/29.js"],"names":["sketch","p","rotationIncrement","rotation","equilateralTriangle","x","y","radius","triangle","Math","sqrt","setup","createCanvas","noFill","angleMode","DEGREES","draw","background","map","mouseX","width","mouseY","height","floor","h","ceil","w","push","translate","rotate","pop","touchMoved","location","path","pathname","description"],"mappings":"4FAAA,6CAGMA,EAAS,SAASC,GACtB,IAEIC,EADAC,EAAW,EAGf,SAASC,EAAoBC,EAAGC,EAAGC,GACjCN,EAAEO,SACAH,EACAC,EAAIC,EACJF,EAAKI,KAAKC,KAAK,GAAK,EAAKH,EACzBD,EAAIC,EAAS,EACbF,EAAKI,KAAKC,KAAK,GAAK,EAAKH,EACzBD,EAAIC,EAAS,GAIjBN,EAAEU,MAAQ,WACRV,EAAEW,aAAa,IAAK,KACpBX,EAAEY,SACFZ,EAAEa,UAAUb,EAAEc,UAGhBd,EAAEe,KAAO,WACPf,EAAEgB,WAAW,SACbd,EAAWF,EAAEiB,IAAIjB,EAAEkB,OAAQ,EAAGlB,EAAEmB,MAAO,EAAG,IAC1ClB,EAAoBD,EAAEiB,IACpBjB,EAAEoB,OACF,EACApB,EAAEqB,OACF,EACA,IAAMb,KAAKc,MAAMtB,EAAEmB,MA7BX,IA6B0BX,KAAKc,MAAMtB,EAAEqB,OA7BvC,MA+BV,IAAK,IAAIE,EAAI,EAAGA,EAAIf,KAAKgB,KAAKxB,EAAEqB,OAAF,IAAwB,EAAGE,GAAK,EAC5D,IAAK,IAAIE,EAAI,EAAGA,EAAIjB,KAAKgB,KAAKxB,EAAEmB,MAAF,IAAuB,EAAGM,GAAK,EAAG,CAC9D,IAAMrB,EAAK,GAADqB,EACJpB,EAAK,GAADkB,EACVvB,EAAE0B,OACF1B,EAAE2B,UAAUvB,EAAGC,GACfL,EAAE4B,OAAO1B,GACTC,EAAoB,EAAG,EAtCjB,IAuCNH,EAAE6B,MACF3B,GAAYD,IAKlBD,EAAE8B,WAAa,WACb,GACE9B,EAAEkB,QAAU,GACZlB,EAAEoB,QAAU,GACZpB,EAAEkB,QAAUlB,EAAEmB,OACdnB,EAAEoB,QAAUpB,EAAEqB,OAEd,OAAO,IAKE,0BAAGU,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAchC,OAAQA,EAAQiC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-11-29-js-0691e94c3d603ef282d4.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const tri = 20;\r\n  let rotation = 0;\r\n  let rotationIncrement;\r\n\r\n  function equilateralTriangle(x, y, radius) {\r\n    p.triangle(\r\n      x,\r\n      y - radius,\r\n      x - (Math.sqrt(3) / 2) * radius,\r\n      y + radius / 2,\r\n      x + (Math.sqrt(3) / 2) * radius,\r\n      y + radius / 2\r\n    );\r\n  }\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.noFill();\r\n    p.angleMode(p.DEGREES);\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.background(\"white\");\r\n    rotation = p.map(p.mouseX, 0, p.width, 0, 60);\r\n    rotationIncrement = p.map(\r\n      p.mouseY,\r\n      0,\r\n      p.height,\r\n      0,\r\n      60 / (Math.floor(p.width / tri) * Math.floor(p.height / tri))\r\n    );\r\n    for (let h = 0; h < Math.ceil(p.height / (tri / 2)) + 2; h += 2) {\r\n      for (let w = 0; w < Math.ceil(p.width / (tri / 2)) + 2; w += 2) {\r\n        const x = w * (tri / 2);\r\n        const y = h * (tri / 2);\r\n        p.push();\r\n        p.translate(x, y);\r\n        p.rotate(rotation);\r\n        equilateralTriangle(0, 0, tri);\r\n        p.pop();\r\n        rotation += rotationIncrement;\r\n      }\r\n    }\r\n  };\r\n\r\n  p.touchMoved = function() {\r\n    if (\r\n      p.mouseX >= 0 &&\r\n      p.mouseY >= 0 &&\r\n      p.mouseX <= p.width &&\r\n      p.mouseY <= p.height\r\n    ) {\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Move pointer or finger over sketch.\" />\r\n);\r\n"],"sourceRoot":""}