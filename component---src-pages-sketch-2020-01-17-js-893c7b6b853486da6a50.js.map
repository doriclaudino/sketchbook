{"version":3,"sources":["webpack:///./src/pages/sketch/2020/01/17.js"],"names":["sketch","p","RENDER","getURLParams","render","setup","pixelDensity","frameRate","createCanvas","WEBGL","noStroke","createLoop","gif","open","noiseRadius","draw","animLoop","theta","noise1D","background","specularMaterial","pointLight","polarToCartesian","width","ease","abs","TWO_PI","x","y","height","push","translate","cos","dist","box","pop","location","path","pathname","description"],"mappings":"ukBAMA,IAAMA,EAAS,SAASC,GACtB,IAAMC,EAASD,EAAEE,eAAeC,OAKhCH,EAAEI,MAAQ,WACRJ,EAAEK,aAAa,GACfL,EAAEM,UALS,IAMXN,EAAEO,aAAa,IAAK,IAAKP,EAAEQ,OAC3BR,EAAES,WACFT,EAAEU,WATa,GASQ,CACrBC,MAAKV,GAAS,CAAEE,QAAQ,EAAOS,MAAM,GACrCC,YAAa,KAIjBb,EAAEc,KAAO,WAAY,IAAD,EACSd,EAAEe,SAArBC,EADU,EACVA,MAAOC,EADG,EACHA,QAEfjB,EAAEkB,WAAW,GACblB,EAAEmB,iBAAiB,KACnBnB,EAAEoB,WAAF,MAAApB,EAAC,CACC,IACA,IACA,GAHD,SAIIqB,YAAiB,EAAG,EAAGL,EAAOhB,EAAEsB,MAAQ,GAAG,IAJ/C,CAKCtB,EAAEsB,MAAQC,YAAKvB,EAAEwB,IAAIP,EAAQ,QAE/BjB,EAAEoB,WAAF,MAAApB,EAAC,CACC,EACA,IACA,KAHD,SAIIqB,YAAiB,EAAG,EAAGL,EAAQhB,EAAEyB,OAAS,EAAGzB,EAAEsB,MAAQ,GAAG,IAJ9D,CAKCtB,EAAEsB,MAAQC,YAAKvB,EAAEwB,IAAIP,EAAQ,QAE/BjB,EAAEoB,WAAF,MAAApB,EAAC,CACC,IACA,EACA,KAHD,SAIIqB,YAAiB,EAAG,EAAGL,EAAShB,EAAEyB,OAAS,EAAK,EAAGzB,EAAEsB,MAAQ,GAAG,IAJpE,CAKCtB,EAAEsB,MAAQC,YAAKvB,EAAEwB,IAAIP,EAAQ,QAE/B,IAAK,IAAIS,GAAK1B,EAAEsB,MAAQ,EAAGI,GAAK1B,EAAEsB,MAAQ,EAAGI,GAvClC,GAwCT,IAAK,IAAIC,GAAK3B,EAAE4B,OAAS,EAAGD,GAAK3B,EAAE4B,OAAS,EAAGD,GAxCtC,GAyCP3B,EAAE6B,OACF7B,EAAE8B,UACAJ,EACAC,EACA,GAAA3B,EAAE+B,IACAf,EACEhB,EAAEgC,KAAF,MAAAhC,EAAC,CACC0B,EACAC,GAFD,SAGIN,YAAiB,EAAG,GAAIL,EAAkB,GAAXhB,EAAE4B,QAAa,QAKzD5B,EAAEiC,IAvDK,IAwDPjC,EAAEkC,QAMK,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAcpC,OAAQA,EAAQqC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2020-01-17-js-893c7b6b853486da6a50.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport \"p5.createloop\";\r\nimport polarToCartesian from \"~lib/polarToCartesian\";\r\nimport { easeInOutQuart as ease } from \"~lib/easing\";\r\n\r\nconst sketch = function(p) {\r\n  const RENDER = p.getURLParams().render;\r\n  const DURATION = 60;\r\n  const RATE = 60;\r\n  const GRID = 30;\r\n\r\n  p.setup = function() {\r\n    p.pixelDensity(1);\r\n    p.frameRate(RATE);\r\n    p.createCanvas(660, 840, p.WEBGL);\r\n    p.noStroke();\r\n    p.createLoop(DURATION, {\r\n      gif: RENDER ? { render: false, open: true } : false,\r\n      noiseRadius: 2,\r\n    });\r\n  };\r\n\r\n  p.draw = function() {\r\n    const { theta, noise1D } = p.animLoop;\r\n\r\n    p.background(0);\r\n    p.specularMaterial(128);\r\n    p.pointLight(\r\n      255,\r\n      255,\r\n      0,\r\n      ...polarToCartesian(0, 0, theta, p.width / 2, true),\r\n      p.width * ease(p.abs(noise1D(5)))\r\n    );\r\n    p.pointLight(\r\n      0,\r\n      255,\r\n      255,\r\n      ...polarToCartesian(0, 0, theta + p.TWO_PI / 3, p.width / 2, true),\r\n      p.width * ease(p.abs(noise1D(7)))\r\n    );\r\n    p.pointLight(\r\n      255,\r\n      0,\r\n      255,\r\n      ...polarToCartesian(0, 0, theta + (p.TWO_PI / 3) * 2, p.width / 2, true),\r\n      p.width * ease(p.abs(noise1D(9)))\r\n    );\r\n    for (let x = -p.width / 2; x <= p.width / 2; x += GRID) {\r\n      for (let y = -p.height / 2; y <= p.height / 2; y += GRID) {\r\n        p.push();\r\n        p.translate(\r\n          x,\r\n          y,\r\n          p.cos(\r\n            theta +\r\n              p.dist(\r\n                x,\r\n                y,\r\n                ...polarToCartesian(0, 0, -theta, p.height * 10, true)\r\n              )\r\n          ) *\r\n            (GRID / 2)\r\n        );\r\n        p.box(GRID);\r\n        p.pop();\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\r\n);\r\n"],"sourceRoot":""}