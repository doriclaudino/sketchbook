{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/13.js"],"names":["sketch","p","diagonal","getHypotenuse","a","b","Math","sqrt","getDistanceFromPointer","x","y","abs","mouseX","mouseY","setup","createCanvas","width","height","noStroke","draw","background","noiseVal","noise","scaleVal","map","push","translate","size","fill","ellipse","pop","touchMoved","location","path","pathname","description"],"mappings":"mJAGMA,EAAS,SAASC,GACtB,IACIC,EAEJ,SAASC,EAAcC,EAAGC,GACxB,OAAOC,KAAKC,KAAKH,EAAIA,EAAIC,EAAIA,GAG/B,SAASG,EAAuBC,EAAGC,GAGjC,OAAOP,EAFGG,KAAKK,IAAIV,EAAEW,OAASH,GACpBH,KAAKK,IAAIV,EAAEY,OAASH,IAIhCT,EAAEa,MAAQ,WACRb,EAAEc,aAAa,IAAK,KACpBb,EAAWC,EAAcF,EAAEe,MAAOf,EAAEgB,QACpChB,EAAEiB,YAGJjB,EAAEkB,KAAO,WACPlB,EAAEmB,WAAW,SACb,IAAK,IAAIX,EAAI,EAAGA,EAAIR,EAAEe,MAAOP,GArBlB,GAsBT,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAEgB,OAAQP,GAtBrB,GAsBgC,CACvC,IAAMW,EAAWpB,EAAEqB,MAAMb,EAAGC,GACtBa,EAAWtB,EAAEuB,IACjBhB,EAAuBC,EAAGC,GAC1B,EACAR,EACA,GACA,KAEFD,EAAEwB,OACFxB,EAAEyB,UAAUjB,EAAIkB,GAAUjB,EAAIiB,IAC9B1B,EAAE2B,KAAF,iBAAwBP,EAAxB,KACApB,EAAE4B,QAAQ,EAAG,EAlCN,GAkCiBR,EAAYE,GACpCtB,EAAE6B,QAKR7B,EAAE8B,WAAa,WACb,GACE9B,EAAEW,QAAU,GACZX,EAAEY,QAAU,GACZZ,EAAEW,QAAUX,EAAEe,OACdf,EAAEY,QAAUZ,EAAEgB,OAEd,OAAO,IAKE,0BAAGe,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAchC,OAAQA,EAAQiC,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2018-12-13-js-01e6da7401dd5a7f5181.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  const size = 20;\r\n  let diagonal;\r\n\r\n  function getHypotenuse(a, b) {\r\n    return Math.sqrt(a * a + b * b);\r\n  }\r\n\r\n  function getDistanceFromPointer(x, y) {\r\n    const a = Math.abs(p.mouseX - x);\r\n    const b = Math.abs(p.mouseY - y);\r\n    return getHypotenuse(a, b);\r\n  }\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    diagonal = getHypotenuse(p.width, p.height);\r\n    p.noStroke();\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.background(\"white\");\r\n    for (let x = 0; x < p.width; x += size) {\r\n      for (let y = 0; y < p.height; y += size) {\r\n        const noiseVal = p.noise(x, y);\r\n        const scaleVal = p.map(\r\n          getDistanceFromPointer(x, y),\r\n          0,\r\n          diagonal,\r\n          0.1,\r\n          1.1\r\n        );\r\n        p.push();\r\n        p.translate(x + size / 2, y + size / 2);\r\n        p.fill(`rgba(0, 0, 0, ${noiseVal})`);\r\n        p.ellipse(0, 0, (size * noiseVal) / scaleVal);\r\n        p.pop();\r\n      }\r\n    }\r\n  };\r\n\r\n  p.touchMoved = function() {\r\n    if (\r\n      p.mouseX >= 0 &&\r\n      p.mouseY >= 0 &&\r\n      p.mouseX <= p.width &&\r\n      p.mouseY <= p.height\r\n    ) {\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"Move pointer or finger over sketch.\" />\r\n);\r\n"],"sourceRoot":""}