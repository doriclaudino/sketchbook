{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/25.js"],"names":["sketch","p","img","step","x","px","preload","loadImage","withPrefix","setup","pixelDensity","createCanvas","background","image","width","height","loadPixels","i","pixels","length","values","slice","color","push","lightness","hue","draw","swap","temp","j","col","y","get","sort","a","b","hueA","hueB","abs","saturation","forEach","c","set","noLoop","updatePixels","location","path","pathname","description"],"mappings":"2jBAIA,IAAMA,EAAS,SAASC,GACtB,IAAIC,EACAC,EAAO,EACPC,EAAI,EACJC,EAAK,GAETJ,EAAEK,QAAU,WACVJ,EAAMD,EAAEM,UAAUC,qBAAW,6BAG/BP,EAAEQ,MAAQ,WACRR,EAAES,aAAa,GACfT,EAAEU,aAAa,IAAS,KACxBV,EAAEW,WAAW,KACbX,EAAEY,MAAMX,EAAK,EAAG,EAAGD,EAAEa,MAAOb,EAAEc,QAE9Bd,EAAEe,aAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAEiB,OAAOC,OAAS,EAAGF,GAAK,EAAG,CAC/C,IAAMG,EAASnB,EAAEiB,OAAOG,MAAMJ,EAAGA,EAAI,GAC/BK,EAAQrB,EAAEqB,MAAF,MAAArB,EAAC,EAAUmB,IACzBf,EAAGkB,KAAK,CACNH,SACAI,UAAWvB,EAAEuB,UAAUF,GACvBG,IAAKxB,EAAEwB,IAAIH,OAKjBrB,EAAEyB,KAAO,WAGP,GAFAzB,EAAEe,aAEW,IAATb,EAAY,CAGd,IAFA,IAAIwB,GAAO,EAEFV,EAAI,EAAGA,EAAIZ,EAAGc,OAAS,EAAGF,IACjC,GAAIZ,EAAGY,GAAGO,UAAYnB,EAAGY,EAAI,GAAGO,UAAW,CACzC,IAAMI,EAAOvB,EAAGY,EAAI,GACpBZ,EAAGY,EAAI,GAAKZ,EAAGY,GACfZ,EAAGY,GAAKW,EAER,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrB5B,EAAEiB,OAAW,EAAJD,EAAQY,GAAKxB,EAAGY,GAAGG,OAAOS,GACnC5B,EAAEiB,OAAiB,GAATD,EAAI,GAASY,GAAKxB,EAAGY,EAAI,GAAGG,OAAOS,GAG/CF,GAAO,EAINA,IAAMxB,EAAO,GAGpB,GAAa,IAATA,EAAY,CAEd,IADA,IAAI2B,EAAM,GACDC,EAAI,EAAGA,EAAI9B,EAAEc,OAAQgB,IAC5BD,EAAIP,KAAKtB,EAAE+B,IAAI5B,EAAG2B,IAEpBD,EACGG,MAAK,SAACC,EAAGC,GACR,IAAMC,EAAOnC,EAAEwB,IAAIxB,EAAEqB,MAAF,MAAArB,EAAC,EAAUiC,KACxBG,EAAOpC,EAAEwB,IAAIxB,EAAEqB,MAAF,MAAArB,EAAC,EAAUkC,KAE9B,OAAIlC,EAAEqC,IAAIF,EAAOC,GAAQ,EAChBpC,EAAEsC,WAAWtC,EAAEqB,MAAF,MAAArB,EAAC,EAAUiC,KAAMjC,EAAEsC,WAAWtC,EAAEqB,MAAF,MAAArB,EAAC,EAAUkC,KAEtDC,EAAOC,KAGjBG,SAAQ,SAACC,EAAGxB,GACXhB,EAAEyC,IAAItC,EAAGa,EAAGhB,EAAEqB,MAAF,MAAArB,EAAC,EAAUwC,UAG3BrC,IAEUH,EAAEa,OAAOb,EAAE0C,SAGvB1C,EAAE2C,iBAIS,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc7C,OAAQA,EAAQ8C,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-12-25-js-ebc108875bb491d64b00.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst sketch = function(p) {\r\n  let img;\r\n  let step = 0;\r\n  let x = 0;\r\n  let px = [];\r\n\r\n  p.preload = function() {\r\n    img = p.loadImage(withPrefix(\"/assets/uglysweater.png\"));\r\n  };\r\n\r\n  p.setup = function() {\r\n    p.pixelDensity(1);\r\n    p.createCanvas(660 / 4, 840 / 4);\r\n    p.background(255);\r\n    p.image(img, 0, 0, p.width, p.height);\r\n\r\n    p.loadPixels();\r\n\r\n    for (let i = 0; i < p.pixels.length - 4; i += 4) {\r\n      const values = p.pixels.slice(i, i + 4);\r\n      const color = p.color(...values);\r\n      px.push({\r\n        values,\r\n        lightness: p.lightness(color),\r\n        hue: p.hue(color),\r\n      });\r\n    }\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.loadPixels();\r\n\r\n    if (step === 0) {\r\n      let swap = false;\r\n\r\n      for (let i = 0; i < px.length - 1; i++) {\r\n        if (px[i].lightness < px[i + 1].lightness) {\r\n          const temp = px[i + 1];\r\n          px[i + 1] = px[i];\r\n          px[i] = temp;\r\n\r\n          for (let j = 0; j < 4; j++) {\r\n            p.pixels[i * 4 + j] = px[i].values[j];\r\n            p.pixels[(i + 1) * 4 + j] = px[i + 1].values[j];\r\n          }\r\n\r\n          swap = true;\r\n        }\r\n      }\r\n\r\n      if (!swap) step = 1;\r\n    }\r\n\r\n    if (step === 1) {\r\n      let col = [];\r\n      for (let y = 0; y < p.height; y++) {\r\n        col.push(p.get(x, y));\r\n      }\r\n      col\r\n        .sort((a, b) => {\r\n          const hueA = p.hue(p.color(...a));\r\n          const hueB = p.hue(p.color(...b));\r\n\r\n          if (p.abs(hueA - hueB) < 5) {\r\n            return p.saturation(p.color(...a)) - p.saturation(p.color(...b));\r\n          } else {\r\n            return hueA - hueB;\r\n          }\r\n        })\r\n        .forEach((c, i) => {\r\n          p.set(x, i, p.color(...c));\r\n        });\r\n\r\n      x++;\r\n\r\n      if (x === p.width) p.noLoop();\r\n    }\r\n\r\n    p.updatePixels();\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\r\n);\r\n"],"sourceRoot":""}