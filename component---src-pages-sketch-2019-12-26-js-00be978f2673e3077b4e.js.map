{"version":3,"sources":["webpack:///./src/pages/sketch/2019/12/26.js"],"names":["sketch","p","img","comparison","random","r","g","b","saturation","color","brightness","lightness","preload","loadImage","withPrefix","setup","createCanvas","background","image","width","height","draw","loadPixels","step","floor","noise","frameCount","start","col","y","Math","min","push","get","sort","a","forEach","c","i","set","updatePixels","noLoop","location","path","pathname","description"],"mappings":"ijBAIA,IAAMA,EAAS,SAASC,GACtB,IAmBIC,EAVEC,EAAaF,EAAEG,OAAO,CATf,SAACC,EAAGC,EAAGC,GAAP,MAAiB,MAAJF,EAAiB,MAAJC,EAAiB,MAAJC,GACrC,SAACF,EAAGC,EAAGC,GAAP,OAAaF,EAAIC,EAAIC,GACjB,SAACF,EAAGC,EAAGC,GAAP,OAAaN,EAAEO,WAAWP,EAAEQ,MAAMJ,EAAGC,EAAGC,KACxC,SAACF,EAAGC,EAAGC,GAAP,OAAaN,EAAES,WAAWT,EAAEQ,MAAMJ,EAAGC,EAAGC,KACzC,SAACF,EAAGC,EAAGC,GAAP,OAAaN,EAAEU,UAAUV,EAAEQ,MAAMJ,EAAGC,EAAGC,KAC7C,SAACF,EAAGC,EAAGC,GAAP,OAAaF,GACX,SAACA,EAAGC,EAAGC,GAAP,OAAaD,GACd,SAACD,EAAGC,EAAGC,GAAP,OAAaA,KAc1BN,EAAEW,QAAU,WACVV,EAAMD,EAAEY,UAAUC,qBAAW,yBAG/Bb,EAAEc,MAAQ,WACRd,EAAEe,aAAa,IAAK,KACpBf,EAAEgB,WAAW,KACbhB,EAAEiB,MAAMhB,EAAK,EAAG,EAAGD,EAAEkB,MAAOlB,EAAEmB,SAGhCnB,EAAEoB,KAAO,WACPpB,EAAEqB,aAMF,IAJA,IAAIC,EAAOtB,EAAEuB,MACXvB,EAAEwB,MAAM,KAAQxB,EAAEyB,WAAa,GAAKzB,EAAEkB,MAAS,MAAQlB,EAAEmB,OAAS,IAJlD,WAOTO,GAEP,IADA,IAAIC,EAAM,GACDC,EAAIF,EAAOE,EAAIC,KAAKC,IAAIJ,EAAQJ,EAAMtB,EAAEmB,QAASS,IACxDD,EAAII,KAAK/B,EAAEgC,KAAKhC,EAAEyB,WAAa,GAAKzB,EAAEkB,MAAOU,IAE/CD,EACGM,MAAK,SAACC,EAAG5B,GAAJ,OAAUJ,EAAU,WAAV,IAAcgC,IAAKhC,EAAU,WAAV,IAAcI,OAChD6B,SAAQ,SAACC,EAAGC,GACXrC,EAAEsC,KAAKtC,EAAEyB,WAAa,GAAKzB,EAAEkB,MAAOmB,EAAIX,EAAO1B,EAAEQ,MAAF,MAAAR,EAAC,EAAUoC,SARvDV,EAAQ,EAAGA,EAAQ1B,EAAEmB,OAAQO,GAASJ,EAAO,EAA7CI,GAYT1B,EAAEuC,eAEEvC,EAAEyB,WAAazB,EAAEmB,QACnBnB,EAAEwC,WAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc1C,OAAQA,EAAQ2C,KAAMD,EAASE,SAAUC,YAAY","file":"component---src-pages-sketch-2019-12-26-js-00be978f2673e3077b4e.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\nimport { withPrefix } from \"gatsby\";\r\n\r\nconst sketch = function(p) {\r\n  const luma = (r, g, b) => r * 0.2126 + g * 0.7152 + b * 0.0722;\r\n  const addRGB = (r, g, b) => r + g + b;\r\n  const saturation = (r, g, b) => p.saturation(p.color(r, g, b));\r\n  const brightness = (r, g, b) => p.brightness(p.color(r, g, b));\r\n  const lightness = (r, g, b) => p.lightness(p.color(r, g, b));\r\n  const red = (r, g, b) => r;\r\n  const green = (r, g, b) => g;\r\n  const blue = (r, g, b) => b;\r\n\r\n  const comparison = p.random([\r\n    luma,\r\n    addRGB,\r\n    saturation,\r\n    brightness,\r\n    lightness,\r\n    red,\r\n    green,\r\n    blue,\r\n  ]);\r\n  let img;\r\n\r\n  p.preload = function() {\r\n    img = p.loadImage(withPrefix(\"/assets/brimley.png\"));\r\n  };\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840);\r\n    p.background(255);\r\n    p.image(img, 0, 0, p.width, p.height);\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.loadPixels();\r\n\r\n    let step = p.floor(\r\n      p.noise(0.02, ((p.frameCount - 1) % p.width) / 100) * (p.height / 2)\r\n    );\r\n\r\n    for (let start = 0; start < p.height; start += step) {\r\n      let col = [];\r\n      for (let y = start; y < Math.min(start + step, p.height); y++) {\r\n        col.push(p.get((p.frameCount - 1) % p.width, y));\r\n      }\r\n      col\r\n        .sort((a, b) => comparison(...a) - comparison(...b))\r\n        .forEach((c, i) => {\r\n          p.set((p.frameCount - 1) % p.width, i + start, p.color(...c));\r\n        });\r\n    }\r\n\r\n    p.updatePixels();\r\n\r\n    if (p.frameCount > p.height) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} description=\"\" />\r\n);\r\n"],"sourceRoot":""}