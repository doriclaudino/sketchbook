{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/22.js"],"names":["sketch","p","size","spheres","getCoordinate","value","random","Math","min","max","setup","createCanvas","WEBGL","noFill","strokeWeight","i","x","y","z","draw","background","camera","cos","frameCount","sin","length","s","push","translate","sphere","noise","pop","oppositeS","bezier","location","path","pathname"],"mappings":"4FAAA,6CAGMA,EAAS,SAASC,GACtB,IAAIC,EACAC,EAAU,GAEd,SAASC,IACP,IAAMC,EAAQJ,EAAEK,QAAQJ,EAAMA,GAC9B,OAAOK,KAAKC,IAAID,KAAKE,IAAIJ,GAAQH,EAAO,GAAIA,EAAO,GAGrDD,EAAES,MAAQ,WACRT,EAAEU,aAAa,IAAK,IAAKV,EAAEW,OAC3BX,EAAEY,SACFZ,EAAEa,aAAa,IACfZ,EAAOD,EAAEK,OAAO,IAAK,KACrB,IAAK,IAAIS,EAAI,EAAGA,EAAW,EAAPb,EAAUa,IAC5BZ,EAAQY,GAAK,CACXC,EAAGZ,IACHa,EAAGb,IACHc,EAAGd,MAKTH,EAAEkB,KAAO,WACPlB,EAAEmB,WAAW,SACbnB,EAAEoB,OACApB,EAAEqB,IAAIrB,EAAEsB,WAAa,KAAOrB,EAC5BD,EAAEuB,IAAIvB,EAAEsB,WAAa,KAAOrB,EAC5BD,EAAEuB,IAAIvB,EAAEsB,WAAa,KAAOrB,EAC5B,EACA,EACA,EACA,EACA,EACA,GAEF,IAAK,IAAIa,EAAI,EAAGA,EAAIZ,EAAQsB,OAAQV,IAAK,CACvC,IAAMW,EAAIvB,EAAQY,GAKlB,GAJAd,EAAE0B,OACF1B,EAAE2B,UAAUF,EAAEV,EAAGU,EAAET,EAAGS,EAAER,GACxBjB,EAAE4B,OAAQ3B,EAAO,IAAOD,EAAE6B,MAAMJ,EAAEV,EAAGU,EAAET,EAAGS,EAAER,IAC5CjB,EAAE8B,MACEhB,EAAIZ,EAAQsB,OAAS,EAAG,CAC1B,IAAMO,EAAY7B,EAAQA,EAAQsB,OAAS,EAAIV,GAC/Cd,EAAEgC,OACAP,EAAEV,EACFU,EAAET,EACFS,EAAER,GACDhB,EAAO,KACPA,EAAO,KACPA,EAAO,IACRA,EAAO,IACPA,EAAO,IACPA,EAAO,IACP8B,EAAUhB,EACVgB,EAAUf,EACVe,EAAUd,OAOL,0BAAGgB,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAclC,OAAQA,EAAQmC,KAAMD,EAASE","file":"component---src-pages-sketch-2018-12-22-js-416926d5e41575742163.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  let size;\r\n  let spheres = [];\r\n\r\n  function getCoordinate() {\r\n    const value = p.random(-size, size);\r\n    return Math.min(Math.max(value, -size / 2), size / 2);\r\n  }\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840, p.WEBGL);\r\n    p.noFill();\r\n    p.strokeWeight(0.5);\r\n    size = p.random(300, 500);\r\n    for (let i = 0; i < size * 2; i++) {\r\n      spheres[i] = {\r\n        x: getCoordinate(),\r\n        y: getCoordinate(),\r\n        z: getCoordinate(),\r\n      };\r\n    }\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.background(\"white\");\r\n    p.camera(\r\n      p.cos(p.frameCount / 100) * size,\r\n      p.sin(p.frameCount / 100) * size,\r\n      p.sin(p.frameCount / 100) * size,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n      0\r\n    );\r\n    for (let i = 0; i < spheres.length; i++) {\r\n      const s = spheres[i];\r\n      p.push();\r\n      p.translate(s.x, s.y, s.z);\r\n      p.sphere((size / 100) * p.noise(s.x, s.y, s.z));\r\n      p.pop();\r\n      if (i < spheres.length / 2) {\r\n        const oppositeS = spheres[spheres.length - 1 - i];\r\n        p.bezier(\r\n          s.x,\r\n          s.y,\r\n          s.z,\r\n          -size / 100,\r\n          -size / 100,\r\n          -size / 100,\r\n          size / 100,\r\n          size / 100,\r\n          size / 100,\r\n          oppositeS.x,\r\n          oppositeS.y,\r\n          oppositeS.z\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} />\r\n);\r\n"],"sourceRoot":""}