{"version":3,"sources":["webpack:///./src/pages/sketch/2018/12/23.js"],"names":["sketch","p","size","setup","createCanvas","WEBGL","random","stroke","strokeWeight","draw","background","camera","cos","frameCount","sin","noFill","r","TWO_PI","noiseVal","noise","anchorPoint","push","rotateZ","rotateX","rotateY","bezier","pop","location","path","pathname"],"mappings":"4FAAA,6CAGMA,EAAS,SAASC,GACtB,IAAIC,EAEJD,EAAEE,MAAQ,WACRF,EAAEG,aAAa,IAAK,IAAKH,EAAEI,OAC3BH,EAAOD,EAAEK,OAAO,IAAK,KACrBL,EAAEM,OAAO,KACTN,EAAEO,aAAa,KAGjBP,EAAEQ,KAAO,WACPR,EAAES,WAAW,GACbT,EAAEU,OACAV,EAAEW,KAAKX,EAAEY,WAAa,KAAO,MAAQX,EAAO,GAC5CD,EAAEa,KAAKb,EAAEY,WAAa,KAAO,MAAQX,EAAO,GAC5CD,EAAEa,KAAKb,EAAEY,WAAa,KAAO,KAAOX,EACpC,EACA,EACA,EACA,EACA,EACA,GAEFD,EAAEc,SACF,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAEgB,OAAQD,GAAKf,EAAEgB,QAAUf,EAAO,IAAK,CACzD,IAAMgB,EAAWjB,EAAEkB,MAAMH,GACnBI,EAAelB,EAAO,EAAKgB,EACjCjB,EAAEoB,OACFpB,EAAEqB,QAAQN,GACVf,EAAEsB,QAAQL,EAAW,GACrBjB,EAAEuB,QAAmB,EAAXN,GACVjB,EAAEwB,QACCL,EACD,EACAA,EACAF,EACAA,EACAA,EACAA,EACAA,EACAA,EACAE,EACA,EACAA,GAEFnB,EAAEwB,OACAL,EACA,EACAA,EACAF,EACAA,EACAA,EACAA,EACAA,EACAA,EACAE,EACA,GACCA,GAEHnB,EAAEwB,OACAL,EACA,GACCA,EACDF,EACAA,EACAA,EACAA,EACAA,EACAA,GACCE,EACD,GACCA,GAEHnB,EAAEwB,QACCL,EACD,GACCA,EACDF,EACAA,EACAA,EACAA,EACAA,EACAA,GACCE,EACD,EACAA,GAEFnB,EAAEyB,SAKO,0BAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,IAAD,CAAc3B,OAAQA,EAAQ4B,KAAMD,EAASE","file":"component---src-pages-sketch-2018-12-23-js-4b59b08ab12426d61bea.js","sourcesContent":["import React from \"react\";\r\nimport SketchLayout from \"~components/sketch-layout\";\r\n\r\nconst sketch = function(p) {\r\n  let size;\r\n\r\n  p.setup = function() {\r\n    p.createCanvas(660, 840, p.WEBGL);\r\n    size = p.random(500, 700);\r\n    p.stroke(255);\r\n    p.strokeWeight(0.5);\r\n  };\r\n\r\n  p.draw = function() {\r\n    p.background(0);\r\n    p.camera(\r\n      p.cos((p.frameCount + 200) / 200) * (size / 3),\r\n      p.sin((p.frameCount + 200) / 100) * (size / 2),\r\n      p.sin((p.frameCount + 200) / 300) * size,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n      0\r\n    );\r\n    p.noFill();\r\n    for (let r = 0; r < p.TWO_PI; r += p.TWO_PI / (size / 10)) {\r\n      const noiseVal = p.noise(r);\r\n      const anchorPoint = (size / 2) * noiseVal;\r\n      p.push();\r\n      p.rotateZ(r);\r\n      p.rotateX(noiseVal / 2);\r\n      p.rotateY(noiseVal * 2);\r\n      p.bezier(\r\n        -anchorPoint,\r\n        0,\r\n        anchorPoint,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        anchorPoint,\r\n        0,\r\n        anchorPoint\r\n      );\r\n      p.bezier(\r\n        anchorPoint,\r\n        0,\r\n        anchorPoint,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        anchorPoint,\r\n        0,\r\n        -anchorPoint\r\n      );\r\n      p.bezier(\r\n        anchorPoint,\r\n        0,\r\n        -anchorPoint,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        -anchorPoint,\r\n        0,\r\n        -anchorPoint\r\n      );\r\n      p.bezier(\r\n        -anchorPoint,\r\n        0,\r\n        -anchorPoint,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        noiseVal,\r\n        -anchorPoint,\r\n        0,\r\n        anchorPoint\r\n      );\r\n      p.pop();\r\n    }\r\n  };\r\n};\r\n\r\nexport default ({ location }) => (\r\n  <SketchLayout sketch={sketch} path={location.pathname} />\r\n);\r\n"],"sourceRoot":""}